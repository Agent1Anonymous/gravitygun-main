do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v30=nil;v30=function(v31,v32,v33)local v39=v31[1];local v40=v31[2];local v41=v31[3];return function(...)local v65=0;local v66;local v67;local v68;local v69;local v70;while true do if (v65==3) then A,B=v28(v11(v70));if  not A[1] then local v88=v31[4][v66] or "?" ;error("Script error at ["   .. v88   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v65==0) then v66=1;v67= -1;v65=1;end if (v65==1) then v68={...};v69=v12("#",...) -1 ;v65=2;end if (v65==2) then v70=nil;v70=function()local v78=v39;local v79=v40;local v80=v41;local v81=v28;local v82={};local v83={};local v84={};for v89=0,v69 do if ((v89>=v80) or ((1564 + 397)<(1786 -(73 + 555)))) then v82[v89-v80 ]=v68[v89 + 1 ];else v84[v89]=v68[v89 + 1 ];end end local v85=(v69-v80) + (3 -2) ;local v86;local v87;while true do local v90=0 -0 ;while true do if ((v90==(1325 -(308 + 1016))) or ((1226 + 1780)<957)) then if (((1348 + (555 -295))>(2635 -(1003 + 443))) and (v87<=(1744 -(811 + 911)))) then if (((1805 -882)<=(5327 -(48 + 807))) and (v87<=10)) then if (((1745 -(399 + 191))<=2314) and (v87<=(7 -3))) then if (((989 + 833)==(2499 -677)) and (v87<=1)) then if ((((10464 -(867 + 1107)) -(7666 -(495 + 1405)))>(1354 -(268 + 21))) and (v87>(0 + 0))) then v84[v86[1 + 1 ]]=v84[v86[1868 -(1615 + 250) ]];else local v111=0 -0 ;local v112;local v113;while true do if (((4209 -(689 + 1035))<=(4715 -(1203 + 499))) and (v111==1)) then while true do if (((376 + 1008)>304) and (v112==(1271 -(7 + 1264)))) then v113=v86[2 + 0 ];v84[v113]=v84[v113]();break;end end break;end if (((951 + 1450)<=(2553 + 450)) and (v111==(0 + 0))) then v112=0 + 0 ;v113=nil;v111=1;end end end elseif (((4278 -(204 + 1002))>=(271 + 464)) and (v87<=(1957 -(843 + 1112)))) then v33[v86[14 -11 ]]=v84[v86[646 -(45 + 599) ]];elseif ((v87>(3 -0)) or ((6722 -5018)>4587)) then v84[v86[(2 -0) -0 ]][v86[507 -((1425 -(103 + 1143)) + 325) ]]=v84[v86[12 -8 ]];elseif (((2180 -(320 + 51))>(2412 -1374)) and v84[v86[2]]) then v66=v66 + (392 -(285 + 106)) ;else v66=v86[1 + 2 ];end elseif ((v87<=(586 -(235 + 344))) or (3646>(8229 -3892))) then if ((v87<=(1 + 4)) or (3372<(3043 -877))) then v66=v86[3 + 0 ];elseif ((v87==6) or ((105 + 1150 + 1003)>=(9314 -6665))) then v84[v86[2]]= #v84[v86[3 + 0 + 0 ]];else v84[v86[1205 -(463 + 740) ]]=v86[8 -5 ];end elseif ((1527<(3372 -(910 + 109))) and (v87<=8)) then v84[v86[(1165 -(76 + 1082)) -5 ]]=v30(v79[v86[6 -3 ]],nil,v33);elseif ((v87>(16 -7)) or ((678 + 2158)>4269)) then v84[v86[1406 -(415 + 989) ]]=v33[v86[1674 -(285 + 836 + 550) ]];else v84[v86[(1037 + 367) -(1256 + 146) ]]=v84[v86[2 + 1 ]]%v84[v86[10 -6 ]] ;end elseif (((503 -218)<(3778 -((1316 -899) + 14))) and (v87<=16)) then if ((v87<=(41 -28)) or ((1823 + 439)>=(6064 -1841))) then if ((4563>(679 + 695)) and (v87<=(90 -(64 + 15)))) then local v118=0;local v119;local v120;local v121;while true do if (((3001 -(651 + 1002))<=3908) and ((1886 -(334 + 1552))==v118)) then v119=0;v120=nil;v118=1;end if (((16 + 12)<=(10471 -8341)) and (v118==1)) then v121=nil;while true do if ((v119==(2 -1)) or ((5402 -(469 + (2065 -(487 + 1476))))<=(9604 -6948))) then while true do if ((v120==(0 -0)) or ((10573 -6028)>(7989 -3280))) then v121=v86[2];v84[v121]=v84[v121](v13(v84,v121 + (1826 -(166 + 1659)) ,v86[342 -(18 + 321) ]));break;end end break;end if ((v119==(0 -0)) or (652==509)) then v120=1238 -(1114 + 124) ;v121=nil;v119=756 -(640 + 115) ;end end break;end end elseif (((1153 + 2402)>139) and (v87>(1653 -(82 + 34 + 1525)))) then v32[v86[3]]=v84[v86[2 -0 ]];else v84[v86[2 + 0 ]]=v86[11 -8 ] + v84[v86[(1208 + 677) -(1842 + 39) ]] ;end elseif ((v87<=((24 -15) + 5)) or (3673<=737)) then local v122=0;local v123;local v124;local v125;local v126;while true do if (((302 + 587)<(8359 -5782)) and (v122==(1 -(0 + 0)))) then v67=(v125 + v123) -(1 + 0) ;v126=1442 -(1075 + 367) ;v122=2;end if ((2583==(4315 -(1395 + 337))) and (v122==(0 + 0))) then v123=v86[2];v124,v125=v81(v84[v123](v13(v84,v123 + (2 -1) ,v67)));v122=1 + 0 ;end if ((1045<(7636 -3658)) and (v122==((240 -(19 + 214)) -(3 + 2)))) then for v238=v123,v67 do local v239=0 -0 ;local v240;while true do if (((6108 -(1033 + 245))>=2173) and (v239==0)) then v240=0 + 0 ;while true do if (((4081 -(202 + 399 + 155 + 318))>=(296 + 467)) and (v240==(0 + 0))) then v126=v126 + 1 + 0 ;v84[v238]=v124[v126];break;end end break;end end end break;end end elseif ((v87==(10 + 5)) or (1196>=(2285 -(368 + 93)))) then local v180=0;local v181;local v182;local v183;local v184;while true do if ((v180==(0 -0)) or ((797 + 3675)<=(4374 -(3754 -(1252 + 174))))) then v181=v86[(1305 -(374 + 929)) + (0 -0) ];v182,v183=v81(v84[v181](v13(v84,v181 + (186 -(47 + 138)) ,v86[1819 -(1213 + 603) ])));v180=1311 -(233 + 1077) ;end if (((168 -(18 + 148))==v180) or (121>478)) then for v253=v181,v67 do local v254=0;local v255;while true do if (((2383 -(983 + 66))==(2310 -(155 + 821))) and (v254==0)) then v255=0 + 0 ;while true do if ((v255==(0 + 0)) or ((5161 -(612 + 623))<=(8661 -6125))) then v184=v184 + 1 + 0 ;v84[v253]=v182[v184];break;end end break;end end end break;end if ((1511>=(31 + 776)) and (v180==(2 -1))) then local v244=1434 -(261 + 1 + 1172) ;while true do if ((v244==0) or ((4706 -2116)<865)) then v67=(v183 + v181) -1 ;v184=466 -(340 + 126) ;v244=2 -1 ;end if (((1 -0)==v244) or ((12785 -(1242 + 8336))<=(333 + 1503))) then v180=2 + 0 ;break;end end end end else local v185=0 + (0 -0) ;local v186;local v187;local v188;while true do if ((v185==(976 -(85 + 890))) or ((2031 + (6064 -4098))==(196 + 3505))) then v188=nil;while true do if (((322 + 1487)<(3093 -(1054 + 194))) and (v186==(327 -(223 + 80 + 24)))) then v187=1794 -(1125 + 669) ;v188=nil;v186=1 + 0 ;end if ((4986>((198 + 82) -70)) and (v186==(1 + 0 + 0))) then while true do if (((3296 -(360 + 831))>(3422 -(1606 + 272))) and (v187==(1315 -(335 + 980)))) then v188=v86[(3 -0) -1 ];v84[v188](v13(v84,v188 + (84 -(36 + 47)) ,v67));break;end end break;end end break;end if (((1648 -(216 + 320 + (2075 -(362 + 601))))==v185) or ((5102 -3295)<(2065 -(7 + 684)))) then v186=(1373 -(119 + 1254)) -0 ;v187=nil;v185=1 + 0 ;end end end elseif ((v87<=19) or ((630 + 777)>(4059 -2435))) then if ((2897<=(5056 -1897)) and (v87<=(1872 -(1020 + 835)))) then local v127=(21 + 236) -(80 + 177) ;local v128;local v129;local v130;local v131;while true do if (((903 + 2358)>(2418 -((354 -(105 + 198)) + 1250))) and ((0 + 0)==v127)) then local v229=0 + 0 ;while true do if ((v229==(0 + 0)) or ((3563 -1788)<(780 + 378))) then v128=0 + 0 ;v129=nil;v229=1 + (1337 -(23 + 1314)) ;end if (((976 + 3969)>4855) and (v229==(3 -2))) then v127=1 + 0 ;break;end end end if (((6911 -2981)==((9776 -(301 + 598)) -4947)) and (v127==(14 -(8 + 5)))) then local v230=0 -0 ;while true do if (((5703 -3964)<(1566 + 3308)) and (v230==(0 -0))) then v130=nil;v131=nil;v230=325 -(146 + 178) ;end if (((2034 + 2241)>(1413 -(49 + 143))) and (v230==(1 -0))) then v127=2 + 0 ;break;end end end if ((3768==(1112 + 2656)) and ((2 -0)==v127)) then while true do if (((1 + 0)==v128) or ((1673 -(232 + 138))>(8208 -(4204 -(433 + 254))))) then local v256=0 -0 ;local v257;while true do if ((v256==(0 + 0)) or (2808<(2181 -(326 + 126)))) then v257=0 + 0 ;while true do if ((v257==(1462 -(483 + 979))) or ((304 + 944)>(3305 -(1541 + 60)))) then v131=v84[v129] + v130 ;v84[v129]=v131;v257=1836 -((2228 -818) + 425) ;end if ((v257==1) or ((7512 -(6505 -(1706 + 75)))>(9918 -5765))) then v128=3 -1 ;break;end end break;end end end if ((0==v128) or ((12774 -(17649 -8808))>(1379 + 3308))) then local v258=0 -0 ;local v259;while true do if (((1229 + 3)<(4982 -(429 + 113))) and (v258==0)) then v259=0 -0 ;while true do if (((11835 -(8573 -(228 + 653)))<(3424 + 1372)) and (v259==(1 -0))) then v128=1033 -(790 + 242) ;break;end if (((2954 -(92 + 38))<=(5832 -2687)) and (v259==(0 + 0))) then v129=v86[7 -(5 + 0) ];v130=v84[v129 + 2 + 0 ];v259=3 -2 ;end end break;end end end if (((3984 -(1196 + 460))==(2385 -((45 -18) + 30))) and (v128==(7 -5))) then if (((3965 -(810 + 314 + 222))<=((15428 -9895) -(81 + 187 + 1600))) and (v130>(0 -0))) then if ((4927>1772) and (v131<=v84[v129 + 1 ])) then local v308=0;while true do if ((v308==0) or ((3241 -(392 + 384))<(4047 -2761))) then v66=v86[2 + 1 ];v84[v129 + 1 + 2 ]=v131;break;end end end elseif (((10764 -7295)>(3966 -(18 + 901))) and (v131>=v84[v129 + (3 -2) ])) then local v309=0 + 0 ;local v310;local v311;while true do if ((v309==(2 -1)) or (2626>=((22731 -17168) -(972 + 183)))) then while true do if (((1148 -((1283 -(417 + 762)) + 444))==600) and (v310==(1537 -(1102 + 435)))) then v311=0 -0 ;while true do if ((v311==0) or ((1646 -726)>((8372 -(93 + 177)) -(5148 -(569 + 804))))) then v66=v86[1200 -(1114 + 83) ];v84[v129 + (11 -8) ]=v131;break;end end break;end end break;end if ((0==v309) or ((5859 -2441)<(3779 -(452 + 122)))) then v310=0 -0 ;v311=nil;v309=(1566 -(231 + 1331)) -3 ;end end end break;end end break;end end elseif (((1506 + 735)==(694 + 1547)) and (v87==(878 -(193 + 667)))) then local v189=1131 -(59 + 1072) ;local v190;local v191;while true do if ((1480<=(1098 + (2349 -(432 + 759)))) and (v189==(1 + (1330 -(1088 + 242))))) then while true do if (((555 + (2473 -(1086 + 863)))>=(672 -(153 + 416))) and (v190==(0 + 0))) then v191=v86[5 -3 ];v84[v191]=v84[v191](v84[v191 + 1 ]);break;end end break;end if (((357 + 249)>=(605 -(30 + 20))) and (v189==(0 + 0))) then v190=0 -0 ;v191=nil;v189=1 + 0 ;end end else for v231=v86[2],v86[3 + 0 ] do v84[v231]=nil;end end elseif ((3910>=(8963 -(3564 + 1806))) and (v87<=((6 -4) + 18))) then if (((14642 -(11289 -(570 + 177)))>=2429) and  not v84[v86[2 + 0 ]]) then v66=v66 + 1 ;else v66=v86[1007 -(773 + 231) ];end elseif ((v87>(552 -(380 + 151))) or ((6203 -3225)<(3843 -(545 + 817)))) then v84[v86[9 -7 ]]=v84[v86[1872 -(1162 + 707) ]] + v86[2 + 1 + 1 ] ;else v84[v86[2]]=v84[v86[2 + 1 ]] -v86[1 + 3 ] ;end elseif ((v87<=(15 + 18)) or ((1375 + 988)<=((2336 + 1047) -(1318 + 603)))) then if ((v87<=27) or ((82 + 1283)>((1028 -439) + 1484))) then if (((2354 + 1775)==4129) and (v87<=(2 + 22))) then if (((7564 -3201)>=((3757 -(1865 + 78)) + (2267 -716))) and (v87>(9 + (1700 -(256 + 1430))))) then v84[v86[1311 -(1224 + 85) ]]={};else local v133=0 + 0 ;local v134;local v135;local v136;while true do if (((9405 -6219)>(29 + 6)) and (v133==0)) then v134=1797 -(302 + (1900 -(283 + 122))) ;v135=nil;v133=(2 -1) + 0 ;end if ((v133==1) or (2609>(5191 -(896 + 1045)))) then v136=nil;while true do if (((5013 -3308)<(4773 -1810)) and (v134==((1414 -(84 + 1330)) + 0))) then v135=154 -(73 + 81) ;v136=nil;v134=1;end if ((530<=(3231 -(2544 -712))) and (v134==(2 -1))) then while true do if ((v135==(0 + 0)) or ((645 + (374 -156))>(3793 -(98 + (1362 -489))))) then v136=v86[1 + 1 ];do return v84[v136](v13(v84,v136 + (149 -(105 + 43)) ,v86[7 -4 ]));end break;end end break;end end break;end end end elseif ((v87<=(762 -(290 + 447))) or ((1617 -(92 + 272))>=4095)) then if ((270<=4590) and (v86[5 -3 ]==v84[v86[4]])) then v66=v66 + (1350 -(241 + 91 + 1017)) ;else v66=v86[(411 + 1561) -(1066 + 903) ];end elseif ((v87>(68 -42)) or (489>(2635 -(892 + 969)))) then local v196=1957 -(22 + 1935) ;local v197;local v198;local v199;while true do if ((v196==(1 + 0)) or ((3312 -(1184 + 168))>2194)) then v199=v84[v197 + 2 ];if (((5201 -(22 + 527))>=2711) and (v199>(236 -(187 + 49)))) then if (((365 + 3969)==4334) and (v198>v84[v197 + 1 + (159 -(86 + 73)) ])) then v66=v86[9 -6 ];else v84[v197 + (1405 -(1148 + 254)) ]=v198;end elseif ((v198<v84[v197 + 1 + 0 ]) or ((4012 -2643)>=(3285 -(347 + 130)))) then v66=v86[3];else v84[v197 + (4 -1) ]=v198;end break;end if ((3717==3717) and (v196==(1985 -(368 + 1617)))) then local v246=1610 -(1321 + 289) ;while true do if ((v246==(0 + 0)) or ((1763 -(12 + 22))<(116 + 184))) then v197=v86[1 + 1 ];v198=v84[v197];v246=2 -1 ;end if ((v246==(1 + 0)) or (((18390 -14581) + 1008)==(4746 -(916 + 199)))) then v196=1 + 0 ;break;end end end end else local v200=0 -0 ;local v201;local v202;while true do if ((289>=182) and (v200==0)) then v201=1754 -(896 + 858) ;v202=nil;v200=385 -(347 + 37) ;end if ((1==v200) or ((709 -(168 + 206))==(3691 -(244 + 206)))) then while true do if ((v201==(499 -(122 + 377))) or (3637>(11788 -7442))) then v202=v86[4 -2 ];v84[v202](v84[v202 + (1130 -(902 + 227)) ]);break;end end break;end end end elseif ((v87<=(54 -24)) or ((6074 -3678)>(4869 -((1079 -626) + 560)))) then if ((v87<=(2 + 0 + 26)) or ((1411 + 1280)>=((20112 -15858) + 444))) then local v137=0 + 0 ;local v138;local v139;local v140;local v141;while true do if ((v137==(1438 -((738 -400) + 1100))) or ((19974 -15917)>=4562)) then v138=0 + 0 ;v139=nil;v137=1 -0 ;end if ((v137==(1 + 0)) or ((6012 -3640)<(1558 + 263))) then v140=nil;v141=nil;v137=1634 -(628 + 1004) ;end if ((3913==(5020 -(52 + 719 + (484 -148)))) and (v137==(615 -(552 + 61)))) then while true do if ((v138==(1281 -(399 + 882))) or ((5284 -(768 + 573))>(6155 -(1533 + 14)))) then local v260=(0 -0) -0 ;while true do if ((3521>1000) and (v260==(1 + 0))) then v138=(2 -1) + 0 ;break;end if (((935 + 926)>492) and (v260==(0 -0))) then v139=v86[2 + 0 ];v140={v84[v139](v13(v84,v139 + (2 -1) ,v67))};v260=(1254 -797) -(212 + 244) ;end end end if ((v138==(2 -(1 + 0))) or (45==(7174 -4835))) then v141=0 -0 ;for v272=v139,v86[4] do local v273=1626 -(567 + 1059) ;while true do if ((((1343 -782) + 1208)>(2374 -1023)) and ((0 + 0)==v273)) then v141=v141 + (2 -1) ;v84[v272]=v140[v141];break;end end end break;end end break;end end elseif ((4965>=610) and (v87==(41 -12))) then local v203=(734 -(285 + 449)) -0 ;local v204;local v205;while true do if ((((5154 + 4332) -(9171 -4093))>=(7968 -4686)) and (v203==(2 -1))) then while true do if ((0==v204) or ((1239 -801)>=((21 -11) + 1871))) then v205=v86[7 -5 ];v84[v205](v13(v84,v205 + (3 -2) + 0 ,v86[3 + 0 ]));break;end end break;end if ((v203==(0 -0)) or (4532<=1231)) then v204=877 -(431 + 446) ;v205=nil;v203=1 -0 ;end end else do return;end end elseif (((1573 -1145)==428) and (v87<=(21 + 3 + 7))) then v84[v86[2 -0 ]][v84[v86[323 -((1709 -(1011 + 489)) + 111) ]]]=v84[v86[9 -5 ]];elseif (((49 + 1166)<=(4874 -(167 + 19))) and (v87==32)) then v84[v86[2 + 0 ]]();elseif ((v84[v86[61 -((1494 -(941 + 519)) + 25) ]]==v86[7 -3 ]) or ((1931 -(9 + 9))>=(1359 + 3577))) then v66=v66 + 1 ;else v66=v86[(325 + 622) -(355 + 589) ];end elseif ((v87<=39) or ((4337 -1428)<(2743 -(722 + 297)))) then if ((v87<=(90 -(24 + 30))) or ((5153 -(561 + 762 + 519))==(147 + 901))) then if ((v87<=(90 -(10 + 46))) or (4707<=(35 + 136 + 27))) then v84[v86[5 -3 ]]=v86[3 -0 ]~=0 ;elseif (((308 + 207 + 1568)<=(9913 -7308)) and (v87==(7 + 1 + 27))) then local v206=0 -0 ;local v207;local v208;local v209;local v210;local v211;local v212;while true do if ((v206==(1059 -(745 + 24 + 287))) or ((2294 -(782 + 660))<=(1095 -575))) then while true do if ((v207==(8 -5)) or ((7707 -2794)<(2869 -(496 + 12)))) then if (v212 or ((5006 -3931)<=(138 + 547))) then local v314=1769 -(1333 + 436) ;local v315;while true do if ((v314==(1933 -(678 + 1255))) or (1489>=(1337 + 972))) then v315=792 -(409 + 383) ;while true do if ((v315==((3285 -1933) -((207 -156) + 1301))) or (3124==(4779 -2896))) then v84[v210]=v212;v66=v86[3];break;end end break;end end else v66=v66 + (1039 -(566 + 472)) ;end break;end if ((v207==((0 -0) + 0)) or ((1007 + 2810)<=(2218 -(218 + 751)))) then local v282=0 -0 ;while true do if ((v282==0) or ((736 -(347 + 364))>2610)) then v208=v86[2 + 0 ];v209=v86[1830 -(606 + 846 + 374) ];v282=1 + 0 ;end if ((((2 -1) + 0)==v282) or ((339 + 2400 + 1235)>4662)) then v207=1 + 0 ;break;end end end if ((2==v207) or ((41 + 218)>(14283 -9464))) then local v283=0 -0 ;while true do if ((1963<(6589 -(730 + 1254))) and (v283==(0 -0))) then for v333=1518 -(416 + 1101) ,v209 do v84[v210 + v333 ]=v211[v333];end v212=v211[1 + 0 ];v283=1 + 0 ;end if ((v283==(1009 -(22 + 6 + 388 + 592))) or ((466 + 38 + 2653)<=(150 + 151))) then v207=2 + 0 + 1 ;break;end end end if ((v207==1) or ((9294 -6772)>(9334 -6018))) then local v284=874 -(366 + 508) ;while true do if (((10087 -7371)>(5499 -4143)) and ((0 + 0 + 0)==v284)) then v210=v208 + 2 ;v211={v84[v208](v84[v208 + 1 ],v84[v210])};v284=(2168 -(391 + 249)) -(56 + 1471) ;end if (((655 + 3274)==(3422 + 507)) and (v284==(1 + 0))) then v207=1107 -(1102 + (63 -(8 + 52))) ;break;end end end end break;end if (((441 -257)==184) and (v206==1)) then v209=nil;v210=nil;v206=3 -1 ;end if (((4 -(1033 -(176 + 855)))==v206) or ((2559 + 2174)<=((2129 + 1492) -(3640 -782)))) then v211=nil;v212=nil;v206=(1082 -(563 + 415)) -(60 + 41) ;end if (((2788 -(17 + 23))>=2064) and (v206==(0 -0))) then v207=0 -0 ;v208=nil;v206=1;end end else local v213=1800 -(954 + 846) ;local v214;local v215;while true do if ((v213==(0 + 0 + 0)) or ((1374 -533)>4744)) then v214=0 -0 ;v215=nil;v213=1 -0 ;end if (((5961 -(278 + 1251))>=(4120 + 61)) and (v213==(1 -0))) then while true do if (((2347 -1195)<=(2675 -((1025 -(171 + 130)) + 549))) and (v214==(0 -0))) then v215=v86[2];v84[v215]=v84[v215](v13(v84,v215 + (2 -1) ,v67));break;end end break;end end end elseif ((2210<=4237) and (v87<=(80 -43))) then local v145=0 + 0 ;local v146;local v147;local v148;while true do if (((1202 + 2376)==(5451 -(1564 + 309))) and (v145==(922 -(182 + 459 + 280)))) then v148=nil;while true do if ((v146==(0 + 0 + 0)) or ((5322 -2903)==(10056 -(6744 -(841 + 335))))) then local v261=0;while true do if ((1807>=(2646 -1783)) and ((1 + 0)==v261)) then v146=1;break;end if ((v261==(0 -(0 -0))) or ((7584 -5695)==3844)) then local v298=0 + 0 ;while true do if ((v298==(0 -0)) or ((5231 -(1111 + 542))<=(2440 -1420))) then v147=v86[9 -7 ];v148=v84[v86[971 -(209 + 759) ]];v298=745 -(502 + 242) ;end if (((64 -41)<(6912 -4381)) and (v298==1)) then v261=1 + 0 ;break;end end end end end if (((136 + 3499)>(3054 -(328 + 74))) and (v146==(1 + 0))) then v84[v147 + 1 + 0 ]=v148;v84[v147]=v148[v86[1 + 3 ]];break;end end break;end if ((v145==(0 + 0)) or ((8903 -6562)<((2549 + 643) -1334))) then local v233=0;while true do if ((v233==(0 + 0)) or ((3712 -(860 + 510))<=(1624 -581))) then v146=0;v147=nil;v233=867 -(409 + 457) ;end if (((1 -0)==v233) or (482>=4601)) then v145=1 -0 ;break;end end end end elseif ((v87==(7 + 31)) or (1449>3107)) then local v216=0;local v217;local v218;local v219;while true do if ((181<(1496 + (1745 -815))) and (v216==(2 -1))) then local v247=0 -0 ;while true do if (((14516 -10060)>=(4835 -3684)) and (1==v247)) then v216=88 -(50 + 36) ;break;end if ((v247==(0 + 0)) or ((419 + 222)>=((3469 -(436 + 750)) + 189))) then v219={};v218=v10({},{__index=function(v287,v288)local v299=0;local v300;local v301;while true do if ((v299==(0 + 0 + 0)) or (2147<(1892 -(344 + 1266)))) then v300=0 -0 ;v301=nil;v299=1 + 0 ;end if ((v299==(3 -2)) or (4174>(10097 -(23902 -18006)))) then while true do if ((v300==((39 -(28 + 11)) + 0)) or (239==(6788 -1910))) then v301=v219[v288];return v301[1][v301[1 + 1 ]];end end break;end end end,__newindex=function(v287,v288,v289)local v302=637 -(515 + 27 + 95) ;local v303;while true do if ((((4570 -2587) + 1404)>(4148 -2504)) and (v302==((0 -0) -0))) then v303=v219[v288];v303[641 -(572 + 68) ][v303[2]]=v289;break;end end end});v247=1;end end end if (((772 + 4016)>(14671 -11077)) and (v216==(1407 -(602 + 805)))) then v217=v79[v86[3]];v218=nil;v216=(2 -1) + 0 + 0 ;end if ((4115>(4467 -(1453 + 510))) and (v216==(1040 -(728 + 310)))) then for v265=2 -1 ,v86[3 + 1 ] do local v266=0;local v267;local v268;while true do if (((475 -(60 + 27))<=3350) and ((2 -1)==v266)) then while true do if ((2971==2971) and (((42 + 20) -(22 + 39))==v267)) then if ((v268[1 + 0 ]==(3 -2)) or ((5034 -(166 + 397))<1930)) then v219[v265-(1 + 0) ]={v84,v268[13 -10 ]};else v219[v265-(1 -0) ]={v32,v268[1 + 2 ]};end v83[ #v83 + 1 + 0 ]=v219;break;end if ((v267==(0 -0)) or ((3935 -(539 + 350))>(14362 -11273))) then local v341=(0 -0) + 0 ;while true do if (((1 -0)==v341) or (3926<(7311 -3984))) then v267=1 + 0 ;break;end if (((696 + 247)==(600 + 343)) and (v341==(0 + 0))) then v66=v66 + (136 -(29 + 106)) ;v268=v78[v66];v341=1;end end end end break;end if (((6962 -4610)==(3739 -(1209 + 178))) and (v266==(0 + 0))) then v267=0;v268=nil;v266=1 + 0 ;end end end v84[v86[585 -(75 + 508) ]]=v30(v217,v218,v33);break;end end else v84[v86[4 -2 ]]=v32[v86[7 -4 ]];end elseif (((4571 -(621 + 368))==3582) and (v87<=42)) then if ((v87<=(574 -(178 + 356))) or ((3365 -(96 + 153))>(4263 -(10 + 573)))) then local v149=(4039 -2499) -((3217 -(1178 + 666)) + 167) ;local v150;local v151;local v152;local v153;local v154;while true do if (((2255 -(3384 -(20 + 1724)))==(319 + 296)) and (v149==1)) then v152=nil;v153=nil;v149=5 -3 ;end if ((v149==0) or ((1908 -(344 + 576))>(585 + 1232))) then v150=0;v151=nil;v149=3 -2 ;end if ((v149==((3342 -(196 + 1306)) -(1264 + 574))) or ((105 + 821)>=(7549 -5837))) then v154=nil;while true do if (((2673 -1826)==(2811 -(1471 + 493))) and (v150==(2 -1))) then v67=(v153 + v151) -(1 + 0) ;v154=1200 -(437 + (2073 -1310)) ;v150=1295 -(305 + 988) ;end if ((56<(511 -404)) and (v150==(441 -(128 + 313)))) then v151=v86[5 -3 ];v152,v153=v81(v84[v151](v84[v151 + (1592 -(935 + 656)) ]));v150=1;end if (((1121 + 2754)<=4678) and (2==v150)) then for v274=v151,v67 do local v275=201 -(150 + 51) ;while true do if ((v275==(0 -0)) or ((6438 -4726)>(1418 + 1231 + 1570))) then v154=v154 + 1 + 0 + 0 ;v84[v274]=v152[v154];break;end end end break;end end break;end end elseif ((1216<=(868 + 3446)) and (v87==(89 -48))) then local v222=59 -(20 + 39) ;local v223;while true do if (((2634 + 441)<(5056 -(77 + 189 + 1030))) and (0==v222)) then v223=v86[2 -0 ];do return v13(v84,v223,v67);end break;end end else v84[v86[349 -((312 -71) + 106) ]][v86[3]]=v86[4];end elseif ((v87<=(37 + 6)) or ((9495 -6747)>3187)) then v84[v86[4 -2 ]]=v84[v86[3]]%v86[7 -3 ] ;elseif ((1606==(3096 -(819 + 671))) and (v87==44)) then if (((6851 -(1563 + 295))==(6658 -(643 + 1022))) and (v84[v86[2 + 0 ]]==v84[v86[(7 -4) + 1 ]])) then v66=v66 + (986 -(62 + 923)) ;else v66=v86[3 + 0 ];end else v84[v86[1193 -(727 + 464) ]]=v84[v86[748 -(293 + 452) ]][v86[509 -(21 + 484) ]];end v66=v66 + 1 ;break;end if ((v90==(0 + 0)) or (1033>(2890 -(1447 + 24)))) then v86=v78[v66];v87=v86[1 + 0 + 0 ];v90=1292 -(774 + 517) ;end end end end;v65=3;end end end;end;return v30(v29(),{},v17)(...);end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v42~=(9 -7)) then else v47=nil;v48=nil;v42=14 -11 ;end if (v42==1) then v45=nil;v46=nil;v42=2;end if (v42==(3 + 0)) then v49=nil;while true do local v76=0;while true do if (v76==(38 -(10 + 28))) then local v91=0 -0 ;while true do if (v91~=(2 -1)) then else v76=3 -2 ;break;end if (v91==(0 + 0)) then if (v43==(1 + 0)) then local v100=0;while true do if ((661 -(575 + 86))==v100) then v48=v24();v49={};v100=1;end if (v100==(4 -2)) then v43=1 + 1 ;break;end if (v100==1) then local v104=0;while true do if (v104~=(1 + 0)) then else v100=79 -(30 + 47) ;break;end if (v104==(0 + 0)) then for v156=1432 -(786 + 645) ,v48 do local v157=0 -0 ;local v158;local v159;local v160;local v161;while true do if (v157==0) then v158=0;v159=nil;v157=1 + 0 ;end if (v157==(1373 -(1138 + 233))) then while true do if (v158~=(0 -0)) then else local v270=0 + 0 ;local v271;while true do if (v270==0) then v271=0;while true do if (1==v271) then v158=1;break;end if (v271==0) then local v342=0 -0 ;while true do if (v342==(260 -(257 + 3))) then v159=0;v160=nil;v342=1;end if (v342==1) then v271=1;break;end end end end break;end end end if (v158==(1 + 0)) then v161=nil;while true do if ((640 -(66 + 574))==v159) then local v304=1396 -(1354 + 42) ;while true do if (v304~=(1 + 0)) then else v159=1;break;end if (v304~=(1727 -(1529 + 198))) then else v160=v22();v161=nil;v304=1 + 0 ;end end end if (v159==1) then if (v160==1) then v161=v22()~=0 ;elseif (v160==2) then v161=v25();elseif (v160==3) then v161=v26();end v49[v156]=v161;break;end end break;end end break;end if (v157==(3 -2)) then v160=nil;v161=nil;v157=1982 -(1096 + 884) ;end end end v47[3 + 0 ]=v22();v104=2 -1 ;end end end end end if ((0 + 0)==v43) then local v101=354 -(121 + 233) ;local v102;while true do if (v101==0) then v102=0 -0 ;while true do if (v102==(1 + 0)) then local v106=0;while true do if (v106~=(2 -1)) then else v102=2;break;end if (v106==(1047 -(559 + 488))) then v46={};v47={v44,v45,nil,v46};v106=1;end end end if (v102==0) then local v107=0 + 0 ;while true do if ((0 + 0)~=v107) then else v44={};v45={};v107=1;end if (v107~=(1117 -(1006 + 110))) then else v102=1;break;end end end if (v102~=(2 + 0)) then else v43=1 + 0 ;break;end end break;end end end v91=1 + 0 ;end end end if (v76==1) then if (v43~=2) then else local v98=0;local v99;while true do if (v98==0) then v99=0 + 0 ;while true do local v103=0;while true do if ((0 -0)~=v103) then else if (v99==(1 + 0)) then local v108=765 -(679 + 86) ;while true do if (v108~=0) then else for v234=1 + 0 ,v24() do v46[v234]=v24();end return v47;end end end if (v99==0) then for v162=1,v24() do local v163=0;local v164;local v165;local v166;while true do if (v163==(1561 -(782 + 778))) then v166=nil;while true do if (v164==0) then v165=1889 -(1883 + 6) ;v166=nil;v164=743 -(237 + 505) ;end if (v164~=(1 + 0)) then else while true do if (v165~=0) then else v166=v22();if (v21(v166,1,1)==0) then local v322=0;local v323;local v324;local v325;local v326;local v327;while true do if (v322~=1) then else v325=nil;v326=nil;v322=2;end if (v322==2) then v327=nil;while true do if (v323==(1 + 0)) then local v351=0;while true do if (v351~=(0 + 0)) then else v326=nil;v327=nil;v351=1;end if (v351==(4 -3)) then v323=2 -0 ;break;end end end if (v323==(640 -(129 + 509))) then while true do if (v324==(4 -2)) then local v355=0 -0 ;while true do if (v355==1) then v324=3;break;end if (v355~=(1729 -(160 + 1569))) then else if (v21(v326,1 -0 ,1)~=(1 + 0)) then else v327[2]=v49[v327[2 + 0 ]];end if (v21(v326,5 -3 ,2)==(1 -0)) then v327[3]=v49[v327[2 + 1 ]];end v355=1 + 0 ;end end end if (v324~=(458 -(414 + 43))) then else local v356=0;while true do if (v356~=(0 -0)) then else v327={v23(),v23(),nil,nil};if (v325==(1061 -(461 + 600))) then local v364=0;local v365;while true do if (0==v364) then v365=1488 -(608 + 880) ;while true do if (v365==(0 + 0)) then v327[1543 -(1467 + 73) ]=v23();v327[4]=v23();break;end end break;end end elseif (v325==1) then v327[9 -6 ]=v24();elseif (v325==(773 -(527 + 244))) then v327[3]=v24() -((2 -0)^16) ;elseif (v325==3) then local v370=0;local v371;while true do if (v370==0) then v371=0;while true do if ((1426 -(600 + 826))~=v371) then else v327[7 -4 ]=v24() -((5 -3)^16) ;v327[4]=v23();break;end end break;end end end v356=1 -0 ;end if ((1783 -(857 + 925))==v356) then v324=2;break;end end end if (v324==3) then if (v21(v326,3,1366 -(1109 + 254) )~=(3 -2)) then else v327[4]=v49[v327[1961 -(705 + 1252) ]];end v44[v162]=v327;break;end if (v324~=(0 -0)) then else v325=v21(v166,2,2 + 1 );v326=v21(v166,4,15 -9 );v324=1;end end break;end if ((1404 -(421 + 983))~=v323) then else local v352=0;while true do if (v352==0) then v324=480 -(436 + 44) ;v325=nil;v352=1 + 0 ;end if (v352==1) then v323=1;break;end end end end break;end if (v322==0) then v323=0;v324=nil;v322=4 -3 ;end end end break;end end break;end end break;end if (v163~=0) then else local v236=0 -0 ;while true do if (v236==(1836 -(1420 + 415))) then v163=1;break;end if (v236==0) then v164=1025 -(33 + 992) ;v165=nil;v236=1860 -(1406 + 453) ;end end end end end for v167=1020 -(380 + 639) ,v24() do v45[v167-(1282 -(588 + 693)) ]=v29();end v99=1;end break;end end end break;end end end break;end end end break;end if (v42~=(20 -(9 + 11))) then else v43=65 -(28 + 37) ;v44=nil;v42=1;end end end;v18=5;end if (v18==1) then v21=function(v34,v35,v36)if v36 then local v73=(v34/((1959 -(1245 + 712))^(v35-1)))%((2 -0)^(((v36-((1 -0) + 0)) -(v35-(746 -(539 + (230 -(14 + 10)))))) + 1 + 0)) ;return v73-(v73%1) ;else local v74=(1 + 1)^(v35-(1 + 0)) ;return (((v34%(v74 + v74))>=v74) and (3 -2)) or 0 ;end end;v22=nil;v22=function()local v50=v1(v16,v19,v19);v19=v19 + 1 ;return v50;end;v23=nil;v18=2;end if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v37)if (v1(v37,2)==79) then v20=v0(v3(v37,1,1));return "";else local v75=v2(v0(v37,16));if v20 then local v77=v5(v75,v20);v20=nil;return v77;else return v75;end end end);v21=nil;v18=1;end if (v18==2) then v23=function()local v51,v52=v1(v16,v19,v19 + 1 + 1 );v19=v19 + (5 -3) ;return (v52 * (754 -498)) + v51 ;end;v24=nil;v24=function()local v53,v54,v55,v56=v1(v16,v19,v19 + (4 -(1 + 0)) );v19=v19 + (1071 -(462 + 605)) ;return (v56 * (10783322 + 377008 + 5616886)) + (v55 * (57565 + 7971)) + (v54 * ((471 + 45) -(84 + 9 + 167))) + v53 ;end;v25=nil;v18=3;end if (v18==3) then v25=function()local v57=v24();local v58=v24();local v59=1188 -(1162 + 25) ;local v60=(v21(v58,1,97 -(39 + 38) ) * ((1 + 1)^32)) + v57 ;local v61=v21(v58,32 -11 ,8 + 13 + 10 );local v62=((v21(v58,29 + 3 )==((2 -1) -0)) and  -(2 -1)) or 1 ;if (v61==(1919 -(1075 + 844))) then if (v60==(0 -0)) then return v62 * (0 -0) ;else v61=2 -1 ;v59=0;end elseif (v61==(9253 -7206)) then return ((v60==((0 -0) -0)) and (v62 * ((1 + 0 + 0)/(0 -0)))) or (v62 * NaN) ;end return v8(v62,v61-1023 ) * (v59 + (v60/(2^(1842 -(245 + 1545))))) ;end;v26=nil;v26=function(v38)local v63;if  not v38 then v38=v24();if (v38==(0 + 0)) then return "";end end v63=v3(v16,v19,(v19 + v38) -(1 + 0) );v19=v19 + v38 ;local v64={};for v71=1 + 0 , #v63 do v64[v71]=v2(v1(v3(v63,v71,v71)));end return v6(v64);end;v27=v24;v18=4;end end end vv9(),...);end