do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v75=0;while true do if (v75==0) then v19=v0(v3(v20,1,1));return "";end end else local v76=v2(v0(v20,16));if v19 then local v95=v5(v76,v19);v19=nil;return v95;else return v76;end end end);local function v21(v22,v23,v24)if v24 then local v77=1523 -(1231 + 292);local v78;while true do if (v77==(0 -0)) then v78=(v22/((3 -1)^(v23-(2 -(1 + 0)))))%((2 + 0)^(((v24-(554 -((1063 -(171 + 344)) + 5))) -(v23-1)) + (2 -1)));return v78-(v78%((2 -1) + 0));end end else local v79=0 -0;local v80;while true do if (v79==(431 -(198 + 233))) then v80=(2 + 0)^(v23-(1 + 0));return (((v22%(v80 + v80))>=v80) and (1 + 0)) or (0 + 0);end end end end local function v25()local v38=0 + 0;local v39;while true do if (v38==(1 + 0)) then return v39;end if (v38==(0 -0)) then v39=v1(v16,v18,v18);v18=v18 + (307 -(269 + 37));v38=1 + 0;end end end local function v26()local v40,v41=v1(v16,v18,v18 + 1 + 1);v18=v18 + (1806 -(110 + 1694));return (v41 * (893 -637)) + v40;end local function v27()local v42=0 + 0;local v43;local v44;local v45;local v46;while true do if (v42==(1 + 0)) then return (v46 * 16777216) + (v45 * (66790 -(699 + 555))) + (v44 * (705 -((1526 -(620 + 688)) + 231))) + v43;end if (v42==(0 + 0)) then v43,v44,v45,v46=v1(v16,v18,v18 + (146 -(131 + 12)));v18=v18 + 4 + 0;v42=1 + (1945 -(61 + 1884));end end end local function v28()local v47=v27();local v48=v27();local v49=1;local v50=(v21(v48,4 -(1 + 2),635 -(289 + 326)) * ((1 + 1)^(58 -26))) + v47;local v51=v21(v48,1525 -(333 + 1171),31);local v52=((v21(v48,3 + 29)==(1 + 0)) and  -1) or (1 -0);if (v51==(0 -0)) then if (v50==(1575 -(637 + 938))) then return v52 * (1092 -(785 + 307));else local v96=113 -(17 + 96);while true do if (v96==(0 -0)) then v51=2 -1;v49=0 -0;break;end end end elseif (v51==2047) then return ((v50==(0 + 0 + 0)) and (v52 * (((9 -6) -2)/((1018 -(201 + 32)) -(222 + 563))))) or (v52 * NaN);end return v8(v52,v51-(1488 -((1095 -(559 + 179)) + 108))) * (v49 + (v50/(((1622 -(1507 + 74)) -(19 + (1124 -(371 + 733))))^((718 + 278) -(461 + 483)))));end local function v29(v30)local v53;if  not v30 then v30=v27();if (v30==(789 -(690 + 99))) then return "";end end v53=v3(v16,v18,(v18 + v30) -(2 -1));v18=v18 + v30;local v54={};for v68=1593 -(598 + 994), #v53 do v54[v68]=v2(v1(v3(v53,v68,v68)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 + 0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v55~=(2 + 1)) then else v62=nil;v63=nil;v55=15 -11;end if ((11 -7)~=v55) then else v64=nil;while true do if (v56~=(1798 -(840 + 955))) then else local v101=0;while true do if (0~=v101) then else v63=nil;v64=nil;v101=1;end if (v101==1) then v56=4;break;end end end if (v56~=(4 -3)) then else local v102=0;while true do if (v102~=(1795 -(1023 + 771))) then else v56=2;break;end if ((287 -(110 + 177))==v102) then v59=nil;v60=nil;v102=1;end end end if (v56~=(1368 -(1334 + 30))) then else while true do if (v57~=(1329 -(1075 + 251))) then else v64=nil;while true do local v111=1969 -(213 + 1756);while true do if (0==v111) then local v112=0;local v113;while true do if (v112==0) then v113=0 + 0;while true do if (v113==(0 + 0)) then local v119=1281 -(356 + 925);while true do if (1~=v119) then else v113=1;break;end if (v119~=0) then else if (1==v58) then local v234=0;local v235;local v236;while true do if (0~=v234) then else v235=0 + 0;v236=nil;v234=4 -3;end if (v234==(1677 -(417 + 1259))) then while true do if (v235~=0) then else v236=0 -0;while true do if (v236==0) then local v309=41 -(4 + 37);local v310;while true do if (v309~=0) then else v310=0 -0;while true do if (v310==(83 -(10 + 73))) then v62={v59,v60,nil,v61};v63=v27();v310=2 -1;end if (v310==1) then v236=1 + 0;break;end end break;end end end if (v236==(595 -(133 + 461))) then v64={};v58=2;break;end end break;end end break;end end end if (v58~=2) then else local v237=1087 -(965 + 122);local v238;while true do if (0==v237) then v238=1509 -(1433 + 76);while true do if (v238==1) then for v294=3 -2,v27() do local v295=0 + 0;local v296;while true do if (v295~=0) then else v296=v25();if (v21(v296,1,1 + 0)~=0) then else local v330=102 -(43 + 59);local v331;local v332;local v333;while true do if (v330==2) then local v342=871 -(682 + 189);while true do if (v342~=(1588 -(1166 + 421))) then else v330=5 -2;break;end if (v342~=0) then else if (v21(v332,1 -0,1)~=1) then else v333[6 -4]=v64[v333[5 -3]];end if (v21(v332,2,2)~=(1 + 0)) then else v333[1777 -(1351 + 423)]=v64[v333[3]];end v342=1;end end end if (v330~=0) then else v331=v21(v296,1 + 1,3);v332=v21(v296,14 -10,6);v330=1;end if (1~=v330) then else local v343=0;while true do if (v343~=(0 -0)) then else v333={v26(),v26(),nil,nil};if (v331==(272 -(246 + 26))) then local v358=0 -0;local v359;local v360;local v361;while true do if (v358==(1 + 0)) then v361=nil;while true do if (v359==1) then while true do if (v360~=(1135 -(798 + 337))) then else v361=0 -0;while true do if (v361~=0) then else v333[3]=v26();v333[14 -10]=v26();break;end end break;end end break;end if (v359~=(0 + 0)) then else local v369=0;while true do if ((0 -0)==v369) then v360=0 + 0;v361=nil;v369=1 + 0;end if ((2 -1)==v369) then v359=1;break;end end end end break;end if (v358~=(0 -0)) then else v359=0;v360=nil;v358=1 -0;end end elseif (v331==(1 + 0)) then v333[3]=v27();elseif (v331==(7 -5)) then v333[3]=v27() -((5 -3)^(1841 -(64 + 1761)));elseif (v331~=3) then else local v370=0;while true do if (v370==(0 -0)) then v333[5 -2]=v27() -((2 + 0)^(7 + 9));v333[2 + 2]=v26();break;end end end v343=599 -(308 + 290);end if (v343~=1) then else v330=2;break;end end end if ((216 -(176 + 37))~=v330) then else if (v21(v332,3,4 -1)~=1) then else v333[4]=v64[v333[4]];end v59[v294]=v333;break;end end end break;end end end v58=3;break;end if (0~=v238) then else local v287=0;while true do if (v287==(0 + 0)) then for v318=2 -1,v63 do local v319=0;local v320;local v321;local v322;local v323;while true do if (v319~=(0 + 0)) then else v320=0 + 0;v321=nil;v319=1 + 0;end if (v319~=2) then else while true do if ((0 -0)==v320) then local v346=0;while true do if (v346~=(1 + 0)) then else v320=1;break;end if (v346==0) then v321=1891 -(327 + 1564);v322=nil;v346=1;end end end if (v320==1) then v323=nil;while true do if (v321==1) then if (v322==1) then v323=v25()~=(1791 -(304 + 1487));elseif (v322==(1192 -(99 + 1091))) then v323=v28();elseif (v322==(5 -2)) then v323=v29();end v64[v318]=v323;break;end if (v321==0) then local v352=0;local v353;while true do if (0==v352) then v353=0;while true do if (v353==0) then local v367=0;local v368;while true do if (v367==(317 -(220 + 97))) then v368=0;while true do if (v368~=(1407 -(1044 + 363))) then else local v373=0;while true do if (v373==(1 -0)) then v368=1;break;end if (v373~=(0 + 0)) then else v322=v25();v323=nil;v373=1 + 0;end end end if ((1 + 0)==v368) then v353=2 -1;break;end end break;end end end if (v353==(288 -(70 + 217))) then v321=1;break;end end break;end end end end break;end end break;end if (v319~=(1 -0)) then else v322=nil;v323=nil;v319=186 -(143 + 41);end end end v62[3 + 0]=v25();v287=1 + 0;end if (v287~=(339 -(302 + 36))) then else v238=1 + 0;break;end end end end break;end end end v119=1;end end end if (v113~=1) then else v111=1;break;end end break;end end end if (1~=v111) then else if (v58~=3) then else local v114=0 + 0;local v115;while true do if (v114==0) then v115=100 -(38 + 62);while true do if (v115==1) then return v62;end if (v115~=0) then else for v209=1906 -(327 + 1578),v27() do v60[v209-(1916 -(1705 + 210))]=v33();end for v211=1,v27() do v61[v211]=v27();end v115=1 + 0;end end break;end end end if (v58==0) then local v116=620 -(265 + 355);local v117;while true do if (v116~=0) then else v117=0 + 0;while true do if (v117==0) then v59={};v60={};v117=513 -(248 + 264);end if (v117~=(1449 -(1191 + 257))) then else v61={};v58=1;break;end end break;end end end break;end end end break;end if ((1307 -(1156 + 150))~=v57) then else local v105=0 + 0;while true do if (v105==0) then v60=nil;v61=nil;v105=1 + 0;end if (v105==1) then v57=2 -0;break;end end end if (v57==0) then local v106=1370 -(1221 + 149);while true do if (v106==1) then v57=460 -(298 + 161);break;end if (v106==(0 + 0)) then v58=0 + 0;v59=nil;v106=1283 -(955 + 327);end end end if (2~=v57) then else local v107=0;local v108;while true do if (v107==(497 -(168 + 329))) then v108=0;while true do if ((1 + 0)==v108) then v57=329 -(281 + 45);break;end if (0~=v108) then else local v118=0 -0;while true do if (v118~=0) then else v62=nil;v63=nil;v118=1 + 0;end if (v118==1) then v108=1 + 0;break;end end end end break;end end end end break;end if (v56==0) then local v103=1574 -(1084 + 490);while true do if (0~=v103) then else v57=718 -(631 + 87);v58=nil;v103=1;end if (v103==1) then v56=1 + 0;break;end end end if ((2 + 0)==v56) then local v104=0;while true do if (v104~=0) then else v61=nil;v62=nil;v104=1;end if (v104==1) then v56=3;break;end end end end break;end if (v55==(0 -0)) then v56=0;v57=nil;v55=1;end if (v55~=1) then else v58=nil;v59=nil;v55=674 -(235 + 437);end if (v55~=(290 -(24 + 264))) then else v60=nil;v61=nil;v55=1131 -(361 + 767);end end end local function v34(v35,v36,v37)local v65=v35[1];local v66=v35[2];local v67=v35[3];return function(...)local v70=1;local v71= -1;local v72={...};local v73=v12("#",...) -1;local function v74()local v81=v65;local v82=v66;local v83=v67;local v84=v32;local v85={};local v86={};local v87={};for v91=0 + 0,v73 do if (((3252 -(648 + 355))<(4178 -1486)) and (v91>=v83)) then v85[v91-v83]=v72[v91 + (3 -2)];else v87[v91]=v72[v91 + (1806 -(1747 + (307 -(28 + 221))))];end end local v88=(v73-v83) + 1 + 0;local v89;local v90;while true do local v92=0 + 0;local v93;while true do if (((2075 + 2386)>=(84 + 232)) and (v92==0)) then v93=0 -0;while true do if ((v93==(1 + 0)) or (2597==1574)) then if ((v90<=17) or ((1704 -(196 + 26))==(4404 -(446 + 699)))) then if ((v90<=(748 -(275 + 465))) or ((5770 -(516 + 1058))<=(909 + 453))) then if ((v90<=3) or (((2468 -1332) + 2649)<=(5338 -1962))) then if (((5892 -(206 + 1581))>(4403 -(1294 + 479))) and (v90<=(1 -0))) then if ((1942<4502) and (v90==((83 + 491) -(282 + 292)))) then v87[v89[1661 -(1103 + 556)]]=v34(v82[v89[1372 -(793 + 309 + 267)]],nil,v37);else v70=v89[3 + 0];end elseif (((5491 -(709 + 260))>=(5541 -1859)) and (v90==(2 + 0))) then if ((v89[(3 -1) + (1470 -(1095 + 375))]==v87[v89[1071 -(637 + 430)]]) or ((2192 + 382)>(3775 -799))) then v70=v70 + (1357 -(186 + 1170));else v70=v89[10 -7];end else local v122=0 -0;local v123;while true do if ((v122==(0 + 0)) or ((965 + 643)<=((2302 -(4 + 27)) -(675 + 487)))) then v123=v89[(1013 -(360 + 645)) -6];v87[v123]=v87[v123](v13(v87,v123 + (1716 -(536 + 1179)),v89[(507 + 1411) -(1585 + 330)]));break;end end end elseif ((v90<=(2 + 3)) or ((1128 + 489 + 1578)==(39 + 378))) then if (((2672 + 400)==3072) and (v90==(1011 -(453 + 554)))) then local v124=1726 -(815 + 911);local v125;local v126;while true do if (((1692 -(829 + 327))<1245) and (v124==(1719 -(190 + 1528)))) then while true do if ((v125==(0 + 0 + 0)) or (695==3800)) then v126=v89[(542 -(189 + 352)) + 1];v87[v126]=v87[v126](v13(v87,v126 + 1 + 0,v71));break;end end break;end if (((443 + 3931)==(2476 + 1898)) and (v124==(646 -((740 -(221 + 305)) + 432)))) then local v215=0;while true do if ((v215==1) or ((7251 -3328)<(2832 -1481))) then v124=1 + 0;break;end if (((5373 -(612 + 623))>(5785 -3002)) and (v215==(1737 -(880 + 857)))) then v125=0 + 0;v126=nil;v215=(1025 -(579 + 444)) -1;end end end end else local v127=381 -(162 + 219);local v128;local v129;local v130;while true do if (((4565 -(912 + 777))>=(99 -57)) and (v127==((1448 -(604 + 843)) + 0))) then v130=nil;while true do if ((((13034 -9681) + 92)>=2760) and (v128==(1 -(1035 -(263 + 772))))) then v87[v129 + 1 + 0]=v130;v87[v129]=v130[v89[15 -11]];break;end if (((3630 -(22 + 56))>=(3269 -622)) and (v128==0)) then local v244=0 -(1393 -(1023 + 370));while true do if ((4934==(11381 -(6563 -(75 + 41)))) and (v244==(0 -0))) then v129=v89[9 -7];v130=v87[v89[3]];v244=1739 -(40 + 1698);end if ((v244==1) or ((1194 + 2600)>=(11122 -7267))) then v128=2 -(1 + 0);break;end end end end break;end if ((((6560 -(377 + 871)) -3656)<(2204 + (3429 -2570))) and (v127==((2809 -(39 + 851)) -(1623 + 296)))) then v128=0 -0;v129=nil;v127=56 -(5 + 19 + 31);end end end elseif ((v90<=((17 -10) -1)) or ((2600 -(23 + 10))==(4024 -1106))) then local v131=0;local v132;local v133;while true do if ((v131==0) or (3066<=(908 + 127))) then v132=1439 -((1070 -(137 + 556)) + 1062);v133=nil;v131=1;end if (((1202 + 111 + 116)<=(3801 -1567)) and (v131==1)) then while true do if ((v132==(0 -0)) or (852>=(3373 + 1252))) then v133=v89[(3 + 0) -1];v87[v133](v87[v133 + ((2 -1) -0)]);break;end end break;end end elseif ((805<=3730) and (v90==(490 -(151 + 332)))) then v87[v89[1438 -(304 + 1132)]]=v87[v89[7 -4]];elseif ( not v87[v89[747 -((1286 -(643 + 511)) + 613)]] or (3539>4798)) then v70=v70 + (1293 -(506 + 786));else v70=v89[3];end elseif ((2399==2399) and (v90<=(32 -20))) then if ((v90<=(29 -19)) or (3426<188)) then if ((v90==(2 + 7)) or ((3030 -(571 + 961))<(1623 -630))) then if (((3293 + 166)>(4090 -(3601 -(1079 + 299)))) and (v87[v89[1 + 1]]~=v87[v89[5 -1]])) then v70=v70 + 1 + 0;else v70=v89[7 -4];end else v36[v89[3 + 0]]=v87[v89[1 + 1]];end elseif ((v90>(19 -8)) or ((3418 + 589)<(2457 -(212 + 141)))) then v87[v89[1 + 1]]=v89[104 -(73 + 28)];else local v138=0 + 0;local v139;local v140;local v141;local v142;local v143;while true do if (((1674 -(213 + 1459))==v138) or ((200 + 883 + 1576)>(11304 -7466))) then v143=nil;while true do if (((18178 -13864)<(4798 + 108)) and (v139==(0 + 0))) then local v246=581 -(226 + 355);while true do if ((v246==(39 -(6 + 33))) or ((5999 -2310)<=(1812 + 1301))) then v140=v89[4 -2];v141,v142=v84(v87[v140](v87[v140 + (1829 -(265 + 1563))]));v246=380 -(236 + 143);end if ((3856==3856) and ((1683 -(1385 + 73 + 224))==v246)) then v139=1;break;end end end if ((((2449 -(12 + 14)) -(28 + 1872))==(2378 -((1957 -(151 + 707)) + 756))) and (v139==(1 + 0))) then v71=(v142 + v140) -(1 + 0);v143=0 -0;v139=7 -(7 -2);end if (((6 -4)==v139) or (2764<=(3284 -1616))) then for v255=v140,v71 do local v256=0 -0;while true do if (((280 + 163)<=(3117 -(869 + 191))) and (v256==0)) then v143=v143 + 1;v87[v255]=v141[v143];break;end end end break;end end break;end if (((1703 -(630 + 204))<(8081 -4436)) and (v138==(1 + 0))) then v141=nil;v142=nil;v138=2 + 0;end if ((v138==(0 -0)) or (((6269 + 541) -4628)<=1660)) then v139=0 + 0;v140=nil;v138=1;end end end elseif ((373<=1716) and (v90<=(959 -(490 + 455)))) then if ((v90==((28 -20) + 5)) or ((5115 -(460 + 665))==(45 + 22))) then local v144=0 + 0;local v145;local v146;local v147;while true do if ((v144==((215 -(72 + 143)) + 0)) or ((128 + 14)>(2890 -(133 + 104)))) then v145=1045 -(532 + 513);v146=nil;v144=1;end if ((4577>(15324 -11012)) and (v144==(1 + 0))) then v147=nil;while true do if ((2733>2079) and (v145==(985 -(90 + 895)))) then local v247=0;while true do if (((3390 -(657 + 40))<=(12655 -9356)) and (v247==(4 -3))) then v145=1 + 0;break;end if ((v247==(0 -0)) or ((4883 -(807 + 828))>=(1520 + 3073))) then v146=v89[655 -((1744 -1165) + (643 -(523 + 46)))];v147={};v247=1 + 0;end end end if ((v145==(2 -1)) or ((1570 + (2583 -1828))<=(505 -(1565 -(582 + 614))))) then for v257=(2 + 0) -1, #v86 do local v258=0 -0;local v259;local v260;while true do if ((v258==(0 + 0)) or (4421<=3818)) then v259=0;v260=nil;v258=1;end if (((4205 -(96 + (680 -(269 + 155))))==(5160 -(1099 + (441 -233)))) and (v258==(1 -0))) then while true do if ((v259==0) or ((2060 + 1388)==(9152 -5659))) then v260=v86[v257];for v312=0 + 0, #v260 do local v313=1853 -(201 + 1652);local v314;local v315;local v316;while true do if (((1125 -472)<(3086 -1543)) and (v313==(4 -3))) then v316=v314[2];if (((v315==v87) and (v316>=v146)) or ((2953 + 1491)==3012)) then local v340=0 + 0;local v341;while true do if (((0 + (1399 -(1208 + 191)))==v340) or ((2212 -1456)==2613)) then v341=0 -0;while true do if (((0 -0)==v341) or ((6708 -4248)>(851 + 2390))) then v147[v316]=v315[v316];v314[1 + 0]=v147;break;end end break;end end end break;end if ((v313==(0 -0)) or ((7448 -4239)<328)) then v314=v260[v312];v315=v314[(2 -1) + 0];v313=1;end end end break;end end break;end end end break;end end break;end end else v87[v89[2 + 0]][v89[3]]=v87[v89[200 -(121 + 75)]];end elseif ((v90<=(46 -(25 + 6))) or ((1059 + 701)<1517)) then v87[v89[1 + 1 + 0]]=v36[v89[263 -(78 + 182)]];elseif ((v90>(1 + 15)) or ((3155 -(157 + 45))==(5077 -2817))) then local v188=0 -(0 -0);local v189;local v190;local v191;local v192;while true do if (((0 + 0)==v188) or ((3467 -(1347 + 356))>(3640 -(1146 + 149 + 321)))) then v189=0 -0;v190=nil;v188=1679 -((2626 -(134 + 864)) + 50);end if ((2==v188) or (((20125 -(234 + 1058)) -14033)<(3459 -((1822 -(137 + 1144)) + 299)))) then while true do if ((v189==0) or ((3197 -(655 + 443))==((12263 -9758) -(186 + 509)))) then local v267=0 + 0;while true do if ((4241==4241) and (v267==(0 + 0))) then v190=v89[2];v191={v87[v190](v87[v190 + (336 -(61 + (765 -491)))])};v267=2 -1;end if (((2 -1)==v267) or ((2374 + 2270)<=4618)) then v189=2 -1;break;end end end if ((((5085 -(48 + 1539)) -(856 + 1004))<=3082) and (v189==(1 + 0))) then v192=0;for v274=v190,v89[6 -(6 -4)] do local v275=0;while true do if ((v275==(0 + 0)) or ((3417 -2072)>=(3245 -(349 + 980 + 323)))) then v192=v192 + ((4 -1) -2);v87[v274]=v191[v192];break;end end end break;end end break;end if (((1 + 0)==v188) or ((655 -262)==(813 -584))) then v191=nil;v192=nil;v188=2;end end else for v216=v89[2],v89[6 -3] do v87[v216]=nil;end end elseif ((2018<4461) and (v90<=(59 -33))) then if ((v90<=(4 + 17)) or ((391 -226)>(4584 + 87))) then if (((1401 -849)<=(15521 -10859)) and (v90<=(49 -30))) then if ((v90>(57 -39)) or ((4174 -2052)==586)) then local v152=0 + 0;local v153;local v154;local v155;local v156;local v157;local v158;local v159;while true do if ((v152==(176 -(133 + 40))) or ((15217 -11158)<=3178)) then v159=nil;while true do if (((2758 -(660 + 1109))>=(4600 -3649)) and (v153==1)) then local v248=0 + 0;while true do if ((v248==(0 + 0)) or ((3510 -(43 + 188))<(1680 + 839))) then v156=nil;v157=nil;v248=1 + 0;end if (((908 -(569 + 137))<=(9757 -5844)) and (v248==(1 + 0))) then v153=1 + 1;break;end end end if ((4401>=(1650 + 868)) and (v153==((3269 -(1014 + 345)) -(96 + 1812)))) then local v249=777 -(62 + 715);while true do if (((4470 -(31 + 7))>=(1329 -(583 + 254))) and (v249==(0 + 0))) then v158=nil;v159=nil;v249=1;end if ((v249==((2671 -(780 + 871)) -(581 + 438))) or (((1979 + 1896) -(1342 + 29))>=(1937 + 2494))) then v153=370 -(171 + 196);break;end end end if ((v153==(0 + 0)) or ((4723 -(159 + 457))<3370)) then local v250=(4721 -3027) -(934 + 760);while true do if (((4726 -(203 + 1286))==(4460 -(87 + 1136))) and (v250==0)) then v154=1020 -(160 + 860);v155=nil;v250=1;end if ((1141==(2569 -(713 + 715))) and (v250==(1 + 0))) then v153=505 -(262 + 242);break;end end end if ((v153==(2 + 1)) or ((269 + 106)>=(5171 -(492 + 437)))) then while true do if ((4212>=(2079 -(410 + 1210))) and (v154==(2 + 0))) then local v276=0 + 0;local v277;while true do if ((0==v276) or ((4905 -(97 + 424))<=3193)) then v277=0;while true do if (((5545 -1511)>(3286 -872)) and ((355 -(268 + 86))==v277)) then v154=(1 + 5) -3;break;end if (((1055 -(1115 -495))<=3183) and ((1930 -(1680 + 250))==v277)) then for v327=1,v156 do v87[v157 + v327]=v158[v327];end v159=v158[1 + 0];v277=1 -(0 -0);end end break;end end end if (((3060 -(548 + 302))<=(1034 + (4545 -3148))) and ((453 -(185 + 265))==v154)) then if (v159 or ((5833 -(878 + 94))==(2467 -(258 + 672)))) then local v289=0 + 0;local v290;while true do if ((v289==(0 -0)) or (((442 + 2917) -(152 + 1710))>=(3739 -(441 + 459)))) then v290=0 -0;while true do if ((v290==(0 -0)) or (((598 + 656) -(121 + 247))==(13542 -9985))) then v87[v157]=v159;v70=v89[1121 -(225 + 893)];break;end end break;end end else v70=v70 + 1 + 0 + 0;end break;end if ((v154==(587 -(200 + 387))) or ((1270 + 548)>=((23747 -15618) -4987))) then local v278=0 -0;local v279;while true do if (((868 -(192 + 676))==v278) or ((6243 -(420 + 247 + 718))<(73 + 89 + 415))) then v279=0 -0;while true do if ((v279==(0 -0)) or ((10775 -7253)<=(2594 -(502 + 536)))) then v155=v89[(3600 -2399) -(897 + 302)];v156=v89[1816 -(1354 + 458)];v279=1;end if (((2306 -(718 + 27))<=4554) and (v279==1)) then v154=1 -0;break;end end break;end end end if ((3972>=(4205 -2176)) and (v154==1)) then local v280=0 -0;while true do if ((v280==1) or ((7853 -2887)<=(1165 + 1549))) then v154=1261 -(1213 + (172 -(93 + 33)));break;end if (((6518 -((1977 -(226 + 730)) + 898))>(14433 -10285)) and (v280==(0 -0))) then local v299=0 -(0 -0);while true do if ((v299==1) or ((1386 -(373 + 974))==(189 + 1480))) then v280=241 -(203 + (1087 -(163 + 887)));break;end if ((v299==(0 -0)) or ((964 -(474 + 326 + 82))>(4623 -(43 + 468)))) then v157=v155 + (86 -(60 + 24));v158={v87[v155](v87[v155 + 1 + 0],v87[v157])};v299=1 + 0;end end end end end end break;end end break;end if ((v152==(1579 -(475 + 1104))) or (4192>=(990 + 3371))) then v153=1440 -(871 + 569);v154=nil;v152=1578 -(865 + 712);end if ((((5543 -(482 + 768)) -(1179 + 786))<=(17629 -(601 + 12097))) and (v152==(3 -1))) then v157=nil;v158=nil;v152=2 + 1;end if ((v152==(1 -0)) or ((619 -380)==(2780 -(21 + 497)))) then v155=nil;v156=nil;v152=1078 -(565 + 511);end end else do return;end end elseif (((3868 -(292 + 36))>=2169) and (v90==20)) then v87[v89[2 + 0]]=v89[1 + 2]~=(0 + 0);else local v161=0 + 0 + 0;local v162;local v163;local v164;while true do if ((v161==(0 -0)) or ((2189 -1574)<=(1335 -905))) then v162=1185 -(847 + 53 + 285);v163=nil;v161=1;end if (((1844 + 2123)>(3609 + 150)) and (v161==1)) then v164=nil;while true do if ((v162==(0 + 0)) or ((2233 -(371 + 883))==(8819 -4733))) then local v251=1228 -(284 + 816 + 128);while true do if (((5298 -3322)>=(1162 -(659 + 110))) and (v251==(1480 -(280 + 1199)))) then v162=1 + 0 + 0;break;end if ((v251==(0 + (0 -0))) or (1096<=(1008 -(1126 -440)))) then v163=1439 -(786 + 653);v164=nil;v251=362 -(156 + 205);end end end if ((v162==(1 + 0)) or ((5855 -((1320 -(59 + 1240)) + 1923))>=4515)) then while true do if ((((128 + 603) -465)<(2540 -(547 + 783))) and (v163==(0 + 0))) then v164=v89[130 -((76 -39) + 91)];v87[v164]=v87[v164]();break;end end break;end end break;end end end elseif ((v90<=(86 -(36 + 27))) or ((14555 -10232)<=(955 -382))) then if ((v90==(42 -(445 -(243 + 182)))) or (2283>(7900 -4697))) then local v165=0 + 0;local v166;local v167;while true do if ((48<=2677) and (v165==(112 -(64 + 48)))) then v166=0 -(0 + 0);v167=nil;v165=236 -(136 + 99);end if (((3112 -1439)<(4404 + 11)) and (v165==(1 + 0))) then while true do if ((v166==((433 -(146 + 287)) -0)) or ((3021 -2149)>=(2485 + 627))) then v167=v89[2 -(699 -(299 + 400))];v87[v167]=v87[v167](v87[v167 + (527 -(173 + 46 + 307))]);break;end end break;end end else local v168=0 -0;local v169;local v170;local v171;local v172;while true do if ((v168==2) or ((684 + 131 + 198)>=(3013 -957))) then while true do if ((v169==(1 -0)) or ((5873 -((1029 -(89 + 90)) + 832))<(2433 -1366))) then v172=0;for v261=v170,v89[1791 -(1362 + 425)] do local v262=0 + 0;local v263;while true do if (((389 + 1646)>(96 + 588)) and (v262==0)) then v263=0 -0;while true do if ((v263==(0 -0)) or ((6132 -(273 + (2451 -(100 + 872))))<=3546)) then v172=v172 + 1 + 0;v87[v261]=v171[v172];break;end end break;end end end break;end if ((730==(1050 -320)) and (v169==0)) then v170=v89[1 + 1 + 0];v171={v87[v170](v13(v87,v170 + 1,v71))};v169=1 + 0;end end break;end if (((9827 -6628)>=((11401 -7684) -2393)) and (v168==(1 -0))) then v171=nil;v172=nil;v168=2 -0;end if ((v168==(0 -0)) or (2915>(3313 + 948))) then v169=0 -0;v170=nil;v168=(8 -4) -(3 + 0);end end end elseif ((v90<=(1410 -(285 + 1101))) or (((5390 + 394) -3624)<(1497 -(371 + 28)))) then local v173=0 -0;local v174;local v175;local v176;while true do if ((v173==(0 -0)) or ((3408 -(258 + 124))>(4930 -1898))) then v174=v82[v89[1 + 2 + 0]];v175=nil;v173=1253 -(730 + 522);end if ((v173==(3 -1)) or ((6212 -1988)<=(1936 + 55))) then for v224=509 -(98 + 410),v89[1 + 3] do local v225=1933 -(81 + 1852);local v226;local v227;while true do if ((v225==(0 -0)) or ((22381 -17683)<=((7170 -(362 + 837)) -2432))) then v226=0 + 0;v227=nil;v225=2 -1;end if ((2884==(359 + 2525)) and (v225==1)) then while true do if ((2137<(4314 -(357 + (18 -14)))) and (0==v226)) then v70=v70 + 1 + 0;v227=v81[v70];v226=1;end if ((v226==(249 -(138 + 65 + 45))) or ((7637 -5077)>(5914 -(3073 -(530 + 806))))) then if ((v227[1 + 0]==(25 -18)) or (((9970 -(118 + 12)) -6107)>=(4781 -(206 + 136)))) then v176[v224-(1842 -(1239 + (1132 -530)))]={v87,v227[2001 -(684 + 1314)]};else v176[v224-(2 -1)]={v36,v227[1094 -(374 + 717)]};end v86[ #v86 + (1538 -(677 + 281 + 579))]=v176;break;end end break;end end end v87[v89[(2 -1) + 1 + 0]]=v34(v174,v175,v37);break;end if (((1894 -(520 + 1373))==v173) or ((10330 -8199)>=(3433 + 30))) then v176={};v175=v10({},{__index=function(v220,v221)local v228=(745 -470) -(224 + 51);local v229;while true do if ((v228==0) or ((9792 -5123)<3624)) then v229=v176[v221];return v229[1961 -(1035 + (2016 -(897 + 194)))][v229[1476 -(1398 + 76)]];end end end,__newindex=function(v220,v221,v222)local v230=0 + 0;local v231;while true do if (((6012 -(3517 -(309 + 18)))==((7101 -1685) -2594)) and ((0 + 0)==v230)) then v231=v176[v221];v231[1779 -((1785 -(113 + 725)) + 831)][v231[3 -1]]=v222;break;end end end});v173=1084 -(519 + 563);end end elseif ((v90==(15 + 10)) or ((17685 -13969)>=((1744 -880) + 3210))) then if ((v87[v89[(11 -5) -4]]==v89[7 -3]) or (1557<829)) then v70=v70 + 1 + 0;else v70=v89[3 -0];end else local v193=0 -0;local v194;local v195;local v196;local v197;local v198;local v199;while true do if ((v193==(3 + 0)) or ((9660 -(8084 -(185 + 205)))>=(11364 -(8664 -(651 + 767))))) then while true do if ((v194==(921 -(388 + 532))) or (1450>=(217 + 328 + 1424))) then v197=nil;v198=nil;v194=1473 -(64 + (2370 -963));end if ((v194==((2063 -(605 + 306)) -(774 + 376))) or ((502 + 693)>=((1036 -821) + 2276))) then v199=nil;while true do if ((v195==(0 -0)) or ((4513 + 403)<=((3080 -(27 + 321)) -(302 + 279)))) then local v291=0 + 0;local v292;while true do if (((5455 -(871 + 914))>(4968 -((562 -423) + 1691))) and ((0 -0)==v291)) then v292=0 -0;while true do if ((v292==(1 -0)) or ((3645 -(1785 + (439 -312)))>=(6585 -(4416 -(1278 + 525))))) then v195=1 + 0;break;end if ((4369==(3372 + 997)) and (v292==(0 -0))) then local v339=0;while true do if ((588==(186 + 402)) and (v339==0)) then v196=v89[1 + 1];v197,v198=v84(v87[v196](v13(v87,v196 + 1,v89[9 -6])));v339=(1 + 1) -1;end if (((3789 -(280 + (1221 -810)))>(4307 -(491 + 1258))) and (v339==(333 -(26 + 306)))) then v292=1 -0;break;end end end end break;end end end if ((v195==(1 + 1)) or ((5246 -(847 + (1954 -(1203 + 65))))<=2985)) then for v302=v196,v71 do local v303=551 -(523 + 28);local v304;local v305;while true do if (((5 + 3132)>=1796) and ((1 + (1299 -(278 + 1021)))==v303)) then while true do if (((4717 -2465)<2948) and ((1645 -(672 + 973))==v304)) then v305=0;while true do if ((v305==(0 + 0 + 0)) or (((1483 -(20 + 21)) -(202 + 282))>=(1073 + 976))) then v199=v199 + 1;v87[v302]=v197[v199];break;end end break;end end break;end if ((v303==(0 -0)) or (4571<=(3249 + 73))) then v304=0 + 0;v305=nil;v303=1;end end end break;end if (((65 + 43 + 1)<4888) and (v195==(1540 -(1427 + (322 -210))))) then local v293=(0 -0) -(268 -(106 + 162));while true do if ((2661==(8013 -5352)) and (v293==(0 + 0))) then local v317=1723 -(641 + (2347 -(611 + 654)));while true do if ((v317==((3 -2) + 0)) or ((1471 -((1445 -631) + 559))>(3585 -((2201 -1357) + 851)))) then v293=1;break;end if (((971 -221)<=3881) and (v317==0)) then v71=(v198 + v196) -(1 + 0);v199=0 + 0;v317=1 + 0;end end end if ((v293==1) or (1503<=(75 + 158 + 17))) then v195=(1892 -(1267 + 622)) -1;break;end end end end break;end if (((286 + 2036)<2879) and (v194==(0 -(1806 -(615 + 1191))))) then v195=1952 -(409 + 1543);v196=nil;v194=1;end end break;end if ((3351>73) and (((530 + 942) -(270 + 1200))==v193)) then v198=nil;v199=nil;v193=405 -(385 + (1921 -(61 + 1843)));end if ((((791 -508) + 2402)<=(5738 -1521)) and (v193==(1596 -(680 + 916)))) then v194=(24 -(20 + 4)) + 0 + 0;v195=nil;v193=1 + 0;end if (((1775 + 2328)>(9011 -5479)) and (v193==(1075 -(142 + 932)))) then v196=nil;v197=nil;v193=1 + 1;end end end elseif ((v90<=(799 -(167 + (1082 -(186 + 295))))) or (((5412 -(520 + 1222)) -(194 + 200))<=(1888 -(565 + 1093)))) then if (((4045 -1001)<(5996 -(918 + (1022 -517)))) and (v90<=(41 -13))) then if ((v90==(10 + 17)) or ((9637 -4731)<=(597 + 6 + (5562 -(9 + 1560))))) then v37[v89[6 -3]]=v87[v89[1 + 1]];else v87[v89[8 -(1009 -(650 + 353))]]=v37[v89[4 -1]];end elseif ((v90<=29) or ((728 + 3890)<(62 + 40))) then v87[v89[1433 -(1164 + 267)]]=v87[v89[6 -3]][v89[1 + 3]];elseif (((790 + 1743)==2533) and (v90==((30 -22) + 22))) then if (((1975 + 617)<(4260 -(542 + 100))) and (v87[v89[6 -4]]==v87[v89[1546 -(430 + 1112)]])) then v70=v70 + 1 + 0;else v70=v89[5 -2];end else local v200=0;local v201;local v202;while true do if (((9012 -6309)<=(4092 -((1317 -(1135 + 15)) + 97))) and (v200==(695 -(580 + 114)))) then while true do if ((((1147 + 6012) -4076)>=(3502 -2218)) and (v201==(0 + 0))) then v202=v89[7 -5];v87[v202](v13(v87,v202 + 1 + (0 -0),v71));break;end end break;end if (((5574 -1322)>=(5009 -(67 + 908))) and (v200==((857 -(609 + 248)) + 0))) then v201=0 + 0;v202=nil;v200=1170 -((989 -(329 + 450)) + 959);end end end elseif ((v90<=33) or ((8740 -4938)<(2837 + 741))) then if ((3330>=(1629 + 251)) and (v90>((52 -41) + 21))) then v87[v89[2]]();else v87[v89[8 -6]]={};end elseif ((4273>(1261 + 158)) and (v90<=(91 -57))) then if (((3581 -2293)>=(3080 -(1118 + 835))) and v87[v89[7 -(383 -(210 + 168))]]) then v70=v70 + 1;else v70=v89[9 -6];end elseif ((v90==(105 -70)) or ((2378 -((26 -13) + 101))>=(4556 -939))) then local v204=0 -0;local v205;local v206;while true do if ((780>=(1055 -405)) and ((256 -(72 + 183))==v204)) then while true do if (((3347 -(485 + 924))<=(2837 + 1007)) and (v205==(0 + 0))) then v206=v89[9 -7];v87[v206](v13(v87,v206 + (1 -0),v89[3]));break;end end break;end if (((10917 -6866)>(301 + 584)) and (v204==((0 -0) -0))) then v205=491 -(226 + 265);v206=nil;v204=1252 -(889 + 362);end end else v87[v89[1 + 1]][v89[6 -3]]=v89[13 -9];end v70=v70 + 1 + 0 + 0;break;end if ((v93==(0 -0)) or ((483 + 19 + 0)>(1453 + 580))) then v89=v81[v70];v90=v89[1];v93=1;end end break;end end end end A,B=v32(v11(v74));if  not A[1] then local v94=v35[4][v70] or "?";error("Script error at ["   .. v94   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end v15("LOL!",v9(),...);end
