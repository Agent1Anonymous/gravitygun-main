do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v70=v2(v0(v20,16));if v19 then local v77=v5(v70,v19);v19=nil;return v77;else return v70;end end end);local function v21(v22,v23,v24)if v24 then local v71=0 -0;local v72;while true do if (v71==(0 -0)) then v72=(v22/((3 -1)^(v23-(3 -2))))%((192 -(188 + 2))^(((v24-(1 + 0)) -(v23-(1 + 0 + 0))) + (1878 -(1103 + 774))));return v72-(v72%(398 -(82 + 315)));end end else local v73=2^(v23-(849 -(638 + 210)));return (((v22%(v73 + v73))>=v73) and 1) or ((4748 -3541) -(964 + 243));end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + 2 + 0);v18=v18 + (6 -4);return (v40 * (762 -506)) + v39;end local function v27()local v41=0;local v42;local v43;local v44;local v45;while true do if (v41==((1100 -(437 + 660)) -2)) then return (v45 * (16779183 -(378 + (2741 -(546 + 606))))) + (v44 * (14597 + 50939)) + (v43 * (162 + 94)) + v42;end if (v41==(0 + 0)) then v42,v43,v44,v45=v1(v16,v18,v18 + 3 + (1624 -(1093 + 531)));v18=v18 + (8 -4);v41=1641 -(613 + 1027);end end end local function v28()local v46=0;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v46==(140 -(38 + 100))) then v51=v21(v48,2 + 19,1514 -(90 + 1393));v52=((v21(v48,10 + 15 + 7)==(1 -0)) and  -(1 + 0)) or (1 + 0 + 0);v46=(2352 -(300 + 204)) -(1744 + 101);end if (v46==1) then v49=4 -3;v50=(v21(v48,(1230 -(629 + 600)) -0,135 -(84 + 31)) * (((1189 -(1107 + 81)) + 1)^(7 + (1892 -(43 + 1824))))) + v47;v46=1921 -(1416 + 503);end if ((0 -0)==v46) then v47=v27();v48=v27();v46=1251 -(1069 + 181);end if (v46==(2 + 1)) then if (v51==(0 + 0)) then if (v50==0) then return v52 * (266 -(149 + 117));else v51=1;v49=0;end elseif (v51==(2589 -(426 + 116))) then return ((v50==(333 -(157 + 176))) and (v52 * ((1 + 0)/(1432 -(1169 + (1160 -(466 + 431))))))) or (v52 * NaN);end return v8(v52,v51-(2 + 1021)) * (v49 + (v50/((447 -(134 + 311))^((2436 -(756 + 294)) -(534 + 511 + 289)))));end end end local function v29(v30)local v53=0 -0;local v54;local v55;while true do if (v53==(1056 -(205 + 10 + 839))) then v55={};for v78=2 -1, #v54 do v55[v78]=v2(v1(v3(v54,v78,v78)));end v53=3;end if (v53==(816 -((815 -(417 + 114)) + 531))) then v54=v3(v16,v18,(v18 + v30) -(4 -3));v18=v18 + v30;v53=2 + 0;end if (v53==(0 -0)) then v54=nil;if  not v30 then v30=v27();if (v30==(0 -0)) then return "";end end v53=3 -2;end if ((204 -(71 + 130))==v53) then return v6(v55);end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (v56==1) then v59=nil;v60=nil;v56=2;end if (v56~=(3 -1)) then else v61=nil;v62=nil;v56=1278 -(466 + 809);end if (v56==3) then v63=nil;v64=nil;v56=88 -(21 + 63);end if (v56==(683 -(537 + 146))) then v57=0;v58=nil;v56=1;end if (v56~=(16 -12)) then else v65=nil;while true do if (v57==1) then v60=nil;v61=nil;v57=2;end if (v57==3) then local v95=0;while true do if (v95==(1008 -(643 + 365))) then v64=nil;v65=nil;v95=3 -2;end if (v95==1) then v57=4;break;end end end if (v57~=(585 -(563 + 22))) then else local v96=0;while true do if ((1378 -(1373 + 5))==v96) then v58=0 -0;v59=nil;v96=1;end if (1==v96) then v57=576 -(63 + 512);break;end end end if (4~=v57) then else while true do if (v58==(8 -5)) then v65=nil;while true do local v110=0 + 0;local v111;while true do if (v110==(0 + 0)) then v111=0;while true do if (v111==0) then local v114=0;local v115;while true do if (v114==0) then v115=0;while true do if (v115~=1) then else v111=1 + 0;break;end if (v115==0) then local v149=0;while true do if (v149==1) then v115=1384 -(1108 + 275);break;end if (v149~=0) then else if (v59~=1) then else local v193=0;local v194;while true do if (v193==0) then v194=0;while true do if (v194==(605 -(589 + 16))) then local v219=0;while true do if (v219==(1 + 0)) then v194=1235 -(535 + 699);break;end if (v219==(0 + 0)) then v63={v60,v61,nil,v62};v64=v27();v219=2 -1;end end end if (v194==1) then v65={};v59=2 -0;break;end end break;end end end if (v59==2) then local v195=0 + 0;local v196;while true do if (v195==(0 -0)) then v196=0;while true do if (v196~=(1 -0)) then else for v221=1,v27() do local v222=0;local v223;local v224;local v225;local v226;while true do if (v222==2) then while true do if (v223==1) then v226=nil;while true do if (v224==0) then v225=0 + 0;v226=nil;v224=1;end if (v224==(2 -1)) then while true do if ((853 -(541 + 312))==v225) then v226=v25();if (v21(v226,421 -(177 + 243),314 -(77 + 236))~=0) then else local v239=0 -0;local v240;local v241;local v242;local v243;while true do if (v239==2) then while true do if (v240==2) then local v244=0;while true do if (v244~=1) then else v240=3;break;end if (v244==0) then if (v21(v242,1,3 -2)==(1 -0)) then v243[2 + 0]=v65[v243[1437 -(1043 + 392)]];end if (v21(v242,2,2)==1) then v243[1566 -(101 + 1462)]=v65[v243[3]];end v244=568 -(20 + 547);end end end if (1==v240) then v243={v26(),v26(),nil,nil};if (v241==(0 -0)) then local v246=0 + 0;local v247;while true do if (v246==0) then v247=0 + 0;while true do if (v247~=(1372 -(387 + 985))) then else v243[5 -2]=v26();v243[4 -0]=v26();break;end end break;end end elseif (v241==1) then v243[1280 -(843 + 434)]=v27();elseif (v241==2) then v243[1704 -(170 + 1531)]=v27() -(2^(14 + 2));elseif (v241~=(2 + 1)) then else local v258=1276 -(297 + 979);local v259;while true do if (v258==0) then v259=0;while true do if (v259~=(0 + 0)) then else v243[239 -(206 + 30)]=v27() -((1380 -(988 + 390))^16);v243[6 -2]=v26();break;end end break;end end end v240=1 + 1;end if (v240~=(0 -0)) then else v241=v21(v226,1280 -(1073 + 205),3);v242=v21(v226,1 + 3,19 -13);v240=1 + 0;end if ((12 -9)==v240) then if (v21(v242,3,3)==(49 -(29 + 19))) then v243[4]=v65[v243[7 -3]];end v60[v221]=v243;break;end end break;end if (v239~=0) then else v240=0;v241=nil;v239=1;end if (v239==(21 -(12 + 8))) then v242=nil;v243=nil;v239=1 + 1;end end end break;end end break;end end break;end if (v223~=0) then else local v238=0;while true do if (v238==(1260 -(976 + 283))) then v223=2 -1;break;end if (v238==0) then v224=1505 -(270 + 1235);v225=nil;v238=1;end end end end break;end if (v222~=0) then else v223=0 -0;v224=nil;v222=1;end if (1==v222) then v225=nil;v226=nil;v222=6 -4;end end end v59=3;break;end if (v196==(0 + 0)) then for v227=1,v64 do local v228=0;local v229;local v230;while true do if (v228~=(1939 -(1653 + 286))) then else local v235=0;local v236;while true do if (v235~=(0 -0)) then else v236=0;while true do if (v236==(1 + 0)) then v228=1514 -(447 + 1066);break;end if ((0 -0)~=v236) then else v229=v25();v230=nil;v236=1;end end break;end end end if (v228~=(2 -1)) then else if (v229==(1 -0)) then v230=v25()~=0;elseif (v229==(3 -1)) then v230=v28();elseif (v229==(5 -2)) then v230=v29();end v65[v227]=v230;break;end end end v63[1 + 2]=v25();v196=1;end end break;end end end v149=1;end end end end break;end end end if (1==v111) then if (v59~=(1060 -(493 + 567))) then else local v116=0;local v117;while true do if (v116==0) then v117=1518 -(750 + 768);while true do if (0==v117) then local v177=829 -(777 + 52);local v178;while true do if (v177==0) then v178=0;while true do if (v178==1) then v117=1;break;end if (v178~=(0 -0)) then else v60={};v61={};v178=1;end end break;end end end if (v117==1) then v62={};v59=2 -1;break;end end break;end end end if (v59==(20 -(16 + 1))) then local v118=0;local v119;local v120;while true do if (v118~=(201 -(132 + 68))) then else while true do if (0~=v119) then else v120=0;while true do local v181=0 + 0;while true do if (v181==0) then if (v120==(284 -(280 + 4))) then local v214=0;while true do if (v214==(836 -(672 + 163))) then v120=2 -1;break;end if (v214==(224 -(10 + 214))) then for v231=1,v27() do v61[v231-(2 -1)]=v33();end for v233=2 -1,v27() do v62[v233]=v27();end v214=1;end end end if ((1 + 0)~=v120) then else return v63;end break;end end end break;end end break;end if (v118~=0) then else v119=0;v120=nil;v118=1;end end end break;end end break;end end end break;end if (v58~=(2 + 0)) then else local v107=350 -(62 + 288);while true do if (v107==1) then v58=3;break;end if (v107~=0) then else v63=nil;v64=nil;v107=1039 -(467 + 571);end end end if (v58==(1260 -(870 + 389))) then local v108=1766 -(296 + 1470);while true do if (v108==(0 -0)) then v61=nil;v62=nil;v108=1;end if (v108==1) then v58=2 -0;break;end end end if (v58~=0) then else local v109=0;while true do if (v109==(26 -(7 + 18))) then v58=1 -0;break;end if (v109~=0) then else v59=0;v60=nil;v109=1 + 0;end end end end break;end if (v57==(436 -(288 + 146))) then local v97=675 -(118 + 557);while true do if (v97~=(697 -(251 + 445))) then else v57=255 -(208 + 44);break;end if (v97~=0) then else v62=nil;v63=nil;v97=1 -0;end end end end break;end end end local function v34(v35,v36,v37)local v66=0;local v67;local v68;local v69;while true do if (v66==1) then v69=v35[3];return function(...)local v80=1;local v81= -1;local v82={...};local v83=v12("#",...) -1;local function v84()local v85=v67;local v86=v68;local v87=v69;local v88=v32;local v89={};local v90={};local v91={};for v98=(1105 -(974 + 131)) + 0,v83 do if ((4057>385) and (v98>=v87)) then v89[v98-v87]=v82[v98 + (3 -2)];else v91[v98]=v82[v98 + (4 -3)];end end local v92=(v83-v87) + 1;local v93;local v94;while true do local v99=0 -0;local v100;while true do if ((v99==(0 -0)) or (2083>(4742 -1413))) then v100=(115 + 10) -(61 + 64);while true do if ((v100==((1005 -(461 + 544)) -0)) or (2535>=(6466 -(336 + (2097 -955))))) then local v112=0 + 0;local v113;while true do if (((1766 + 6)>=(901 -583)) and (v112==(0 + 0))) then v113=(599 + 861) -(460 + 1000);while true do if ((v113==(1 + 0)) or ((1712 -(1074 + 209))>=(13742 -(10673 -(406 + 1508))))) then v100=1 + 0;break;end if (((801 -(85 + 60 + 656))==v113) or ((1994 + 781)<1343)) then local v121=0 + 0;while true do if ((v121==(992 -(350 + 641))) or ((3188 -(147 + 262 + 1487))<=205)) then v113=683 -(606 + 76);break;end if ((v121==(0 + 0)) or (((6487 + 1237) -(5802 -3067))<(8003 -4162))) then v93=v85[v80];v94=v93[1 + 0];v121=1;end end end end break;end end end if ((v100==(1 -0)) or ((5578 -((1313 -857) + 821))==3084)) then if ((v94<=(25 -(47 -33))) or (((3893 -(423 + 305)) -1277)<(210 + (878 -583)))) then if ((v94<=(14 -9)) or ((198 + 4156)<=955)) then if (((3207 -(115 + 175))>=(7475 -5835)) and (v94<=(1 + 1 + 0))) then if ((v94<=(0 -0)) or (((4235 -2762) + 398)>2217)) then local v122=0 + 0;local v123;local v124;local v125;local v126;local v127;while true do if ((((11814 -(623 + 1186)) -(11880 -5540))>(3855 -(737 + 374))) and (v122==(1 + (0 -0)))) then v125=nil;v126=nil;v122=5 -3;end if (((13617 -10670)>=((18002 -13843) -2110)) and (v122==(5 -(574 -(507 + 64))))) then v127=nil;while true do if ((v123==1) or ((528 + 831)==(750 + (2186 -(130 + 370))))) then local v186=0;while true do if ((v186==(393 -((419 -136) + 109))) or ((12196 -7981)==(1996 + (1340 -(681 + 333))))) then v123=1 + 1;break;end if (((1416 -(270 + 12))<(4470 -(1422 + 475))) and (v186==(1319 -(51 + 1268)))) then v81=(v126 + v124) -(1 -0);v127=1883 -(643 + 1240);v186=1504 -((1951 -(38 + 1633)) + 1223);end end end if (((805 + 152)<=(6380 -(1571 + 139))) and (v123==((13 -7) -4))) then for v197=v124,v81 do local v198=956 -(850 + 106);while true do if ((v198==(0 + 0 + 0)) or ((437 + 2434)<(2811 -1617))) then v127=v127 + (172 -(25 + 146));v91[v197]=v125[v127];break;end end end break;end if ((v123==((0 + 0) -0)) or ((16942 -12188)<=(2408 + 1463))) then local v187=1995 -(1565 + 430);while true do if ((v187==(1 -0)) or ((2686 -(593 + 311))==(58 -21))) then v123=(3493 -(629 + 1318)) -(1073 + 472);break;end if ((v187==(694 -((567 -(113 + 86)) + 326))) or ((5157 -(623 + 254))<((5915 + 6289) -(5374 + 3336)))) then v124=v93[(1903 -(1103 + 793)) -5];v125,v126=v88(v91[v124](v13(v91,v124 + (1873 -(722 + 1150)),v93[3])));v187=1 + 0 + 0;end end end end break;end if (((18377 -13878)>=996) and (v122==(0 + 0 + 0))) then v123=787 -(235 + 552);v124=nil;v122=1 + 0;end end elseif (((438 + (2065 -(1320 + 221)))>272) and (v94==(1600 -(712 + (2786 -1899))))) then v91[v93[1 + 1]]=v34(v86[v93[7 -(1028 -(950 + 74))]],nil,v37);else v91[v93[5 -(5 -2)]]={};end elseif ((v94<=(1 + (4 -2))) or (((2992 + 64) -(938 + 822))>=(2793 -962))) then local v128=0 -0;local v129;local v130;local v131;while true do if (((7546 -(6405 -(263 + 1480)))<(4316 -(186 + 846))) and (v128==(0 + 0))) then v129=(771 + 691) -(1133 + 329);v130=nil;v128=1 + 0;end if ((v128==((1 -0) -0)) or (((3144 + 366) -(634 + 42))<=(2219 -(242 + (1166 -774))))) then v131=nil;while true do if (((6584 -(4981 -2935))>=(2462 + 581)) and (1==v129)) then while true do if ((v130==0) or (((20550 -16273) -((1254 -841) + 31))==(1656 -(34 + 798)))) then v131=v93[5 -3];v91[v131]=v91[v131](v13(v91,v131 + (2 -1),v93[3 + 0]));break;end end break;end if ((v129==(210 -(90 + 120))) or ((4959 -(1124 + (270 -201)))>=(6247 -(246 + 1562)))) then local v188=(0 + 0) -0;while true do if ((2956>((989 -(108 + 226)) + 823)) and (v188==((910 + 457) -(1026 + 340)))) then v129=3 -2;break;end if ((v188==0) or ((1836 -(262 + 975))==(463 + (566 -(370 + 85))))) then v130=0;v131=nil;v188=1 + 0;end end end end break;end end elseif ((v94==((316 + 1057) -(1210 + 159))) or ((2576 + 791 + 506)<(5454 -2650))) then if (((2315 -854)>=(107 + 550)) and (v91[v93[1 + 1]]==v93[(543 -(376 + 166)) + (10 -7)])) then v80=v80 + (1 -0);else v80=v93[3 + 0];end else v91[v93[2 + 0]]=v93[3]~=(0 + 0);end elseif ((v94<=8) or (2061<(1442 + 397))) then if ((v94<=((954 -(523 + 428)) + (4 -1))) or ((1073 + 1222)>=((1465 + 1977) -(748 + (1182 -(47 + 1099)))))) then local v132=482 -(103 + 379);local v133;local v134;local v135;while true do if ((v132==(0 + 0)) or ((61 + 642)>=(3415 + 291 + 237))) then v133=0 -(0 -0);v134=nil;v132=(2 -1) + 0;end if ((v132==(1 + 0)) or ((17975 -14366)<1926)) then v135=nil;while true do if (((0 + 0)==v133) or (199==((680 -154) -348))) then v134=(2731 -(1187 + 616)) -(161 + 767);v135=nil;v133=4 -3;end if ((((5547 -(1111 + 265)) -((329 -(24 + 63)) + 714))<(6049 -(368 + 1593))) and (v133==(2 -1))) then while true do if (((2099 -(63 + 1198))==(1414 -576)) and (v134==(0 -0))) then v135=v93[1964 -(1390 + 572)];v91[v135](v13(v91,v135 + 1 + 0,v93[2 + 1]));break;end end break;end end break;end end elseif ((2924==(827 + 2097)) and (v94==(1896 -(822 + (1212 -(52 + 93)))))) then local v153=0 -0;local v154;local v155;local v156;local v157;while true do if ((v153==0) or (3565>3616)) then v154=0;v155=nil;v153=1 -0;end if (((1171 -455)==(2497 -(29 + 9 + 1743))) and (v153==(1 + 1 + 0))) then while true do if ((v154==(1446 -(106 + 1339))) or ((3073 -((1674 -657) + (814 -585)))>(7692 -3453))) then v157=v93[208 -(2 + 111 + 92)];for v211=1 + 0 + 0,v157 do v156[v211]=v91[v155 + v211];end break;end if ((4094==(11367 -7273)) and (v154==(0 + 0))) then local v201=0 -0;while true do if ((((9357 -7212) + 386)>(5948 -3959)) and (v201==(0 + 0 + 0))) then v155=v93[2 -(0 -0)];v156=v91[v155];v201=1460 -(380 + 1079);end if ((v201==1) or ((673 + 57 + 2715)<(1008 + (2875 -(852 + 1067))))) then v154=1;break;end end end end break;end if (((1591 -(14 + 16 + 699))<=4950) and (v153==(2 -1))) then v156=nil;v157=nil;v153=739 -(599 + 39 + 99);end end elseif ((v93[8 -6]==v91[v93[(27 -13) -10]]) or (4328<=(4198 -(8 + 6)))) then v80=v80 + (3 -2);else v80=v93[1193 -(334 + 856)];end elseif ((v94<=(1496 -((877 -(549 + 324)) + 1483))) or ((17398 -13532)>=(6724 -(1148 + 616)))) then local v136=0;local v137;local v138;local v139;while true do if ((v136==((652 -(14 + 106)) -(218 + 314))) or ((5878 -(1016 + 15))<((14848 -9444) -1042))) then v137=0;v138=nil;v136=1 + 0;end if (((4560 -(243 + (2111 -(1476 + 296))))<(1473 + 1718 + 1761)) and (v136==(495 -(212 + 282)))) then v139=nil;while true do if (((5179 -(630 + 721))>=(17 + 18)) and ((1 + 0)==v137)) then for v199=v138 + (1 -0),v93[4 -1] do v7(v139,v91[v199]);end break;end if ((v137==0) or ((7870 -4823)==(1322 -(111 + 43 + (664 -(501 + 143)))))) then v138=v93[(900 -(833 + 66)) + 1];v139=v91[v138];v137=4 -3;end end break;end end elseif (((1388 + 239)<(260 + 336 + 1448)) and (v94==(26 -16))) then v91[v93[488 -((1134 -720) + 72)]]=v37[v93[8 -(2 + 3)]];else do return;end end elseif (((3664 -(406 + (2861 -1694)))<(5875 -3765)) and (v94<=(5 + 1 + 11))) then if ((v94<=(21 -7)) or (4467<2698)) then if (((1126 + 3224)>(1094 + 2845)) and (v94<=(28 -16))) then v91[v93[1605 -(39 + 1564)]][v93[3 + 0]]=v93[4];elseif ((v94==(2 + (1588 -(432 + 1145)))) or ((456 + 1358)==(10215 -6413))) then v91[v93[2]]=v91[v93[1435 -(1083 + 349)]];else local v162=0;local v163;local v164;while true do if (((3646 -(52 + (4063 -2378)))<=3691) and (v162==(1 + 0))) then v91[v163 + 1]=v164;v91[v163]=v164[v93[152 -((768 -(320 + 334)) + 34)]];break;end if (((0 + 0)==v162) or (1732>=(3336 -(305 + 127)))) then local v185=(0 + 0) -0;while true do if ((v185==((989 -(15 + 42)) -(822 + 109))) or ((3788 -(12 + 406))<=(4871 -((3594 -2250) + (526 -300))))) then v162=2 -1;break;end if (((4143 -2838)<=(15765 -(30886 -20090))) and (v185==0)) then v163=v93[1720 -(1707 + 11)];v164=v91[v93[551 -(306 + 242)]];v185=1 + 0;end end end end end elseif (((4399 -(1047 + 189))>1708) and (v94<=(31 -(9 + 7)))) then local v142=0 + 0;local v143;local v144;while true do if (((41 + 13)<=(3741 -(489 + 231))) and (v142==(612 -(337 + 275)))) then v143=0;v144=nil;v142=501 -(452 + 48);end if ((809<=(1460 + 2445 + 1078)) and (v142==(2 -1))) then while true do if (((3289 -(62 + 1108))>=(365 + 63)) and (v143==0)) then v144=v93[1297 -(527 + 89 + 679)];v91[v144]=v91[v144](v13(v91,v144 + 1,v81));break;end end break;end end elseif (((316 + (156 -34))<((3370 -2055) -512)) and (v94>(314 -(224 + 74)))) then local v165=173 -(66 + 62 + 45);local v166;local v167;while true do if (((6536 -3304)>=((2012 -819) -(78 + 250))) and (v165==0)) then v166=0;v167=nil;v165=(3342 -(1085 + 885)) -(1316 + 55);end if (((2438 -(986 + 140))<=(5651 -(639 + 645))) and (v165==1)) then while true do if (((6974 -3129)>=(4862 -(235 + 1140))) and ((887 -(268 + 619))==v166)) then v167=v93[(402 -(314 + 85)) -1];v91[v167](v91[v167 + (237 -(37 + 199))]);break;end end break;end end else v80=v93[6 -3];end elseif ((v94<=(33 -13)) or ((986 + 1476)<=(93 -(9 + 23)))) then if (((1466 -432)<(5461 -(1346 + 510))) and (v94<=(1734 -(1407 + 309)))) then v91[v93[1 + 1]]=v93[1 + 2];elseif ((v94==(51 -32)) or ((88 + 1461)>2936)) then local v169=0 -0;local v170;local v171;while true do if ((v169==(267 -(210 + 57))) or ((8358 -4940)<(711 -(87 + (876 -(505 + 54)))))) then v170=1455 -(1216 + 239);v171=nil;v169=1 + 0;end if ((((4434 -2030) -(264 + (2166 -1338)))>=12) and (v169==(1 + 0))) then while true do if (((502 + 106 + 1353)<=(3560 -(141 + 125))) and (v170==((0 -0) -0))) then v171=v93[1248 -(1127 + 119)];v91[v171]=v91[v171]();break;end end break;end end else for v175=v93[941 -(478 + 461)],v93[3] do v91[v175]=nil;end end elseif (((936 + 327 + 3072)>(2539 -(1105 + 680))) and (v94<=(43 -22))) then if ((v91[v93[(357 + 492) -(783 + 64)]]==v91[v93[9 -5]]) or ((2642 + 470)==4786)) then v80=v80 + 1 + 0;else v80=v93[1 + 2 + 0];end elseif ((((6525 -3728) + 1306)<=((6655 + 96) -2175)) and (v94>(612 -(37 + 553)))) then v91[v93[1 + (2 -1)]]=v91[v93[8 -5]][v93[6 -(1324 -(1313 + 9))]];else v91[v93[1535 -(337 + 1196)]]();end v80=v80 + 1;break;end end break;end end end end A,B=v32(v11(v84));if  not A[1] then local v101=0;local v102;while true do if (v101==0) then v102=v35[4][v80] or "?";error("Script error at ["   .. v102   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end if (v66==0) then v67=v35[1];v68=v35[2];v66=1;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
