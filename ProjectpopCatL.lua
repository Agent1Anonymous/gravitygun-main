do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (1==v0) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (3==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (v0==4) then v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v76=0;local v77;while true do if (v76==0) then v77=v3(v1(v29,16));if v28 then local v91=v6(v77,v28);v28=nil;return v91;else return v77;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v78=(v31/((3 -1)^(v32-(1 + 0 + 0))))%((2 + (551 -(486 + 65)))^(((v33-(715 -(634 + 80))) -(v32-1)) + (130 -(113 + 16)))) ;return v78-(v78%(1 + 0)) ;else local v79=((3 + 0) -1)^(v32-1) ;return (((v31%(v79 + v79))>=v79) and (2 -1)) or (0 + 0) ;end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + 2 );v27=v27 + 2 + 0 ;return (v49 * (1610 -(108 + 1246))) + v48 ;end local function v36()local v50,v51,v52,v53=v2(v25,v27,v27 + (1773 -(238 + 1534)) + 2 );v27=v27 + 2 + 2 ;return (v53 * (16778897 -(183 + 1498))) + (v52 * (43769 + 21767)) + (v51 * (156 + 100)) + v50 ;end local function v37()local v54=v36();local v55=v36();local v56=1550 -(924 + (2495 -1870)) ;local v57=(v30(v55,2 -1 ,1 + 19 ) * ((1 + 1)^(81 -49))) + v54 ;local v58=v30(v55,15 + 6 ,1108 -(238 + 839) );local v59=((v30(v55,105 -73 )==(1 -0)) and  -1) or ((1 -0) -0) ;if (v58==(0 -0)) then if (v57==(0 -0)) then return v59 * (1964 -(1102 + 862)) ;else v58=1083 -(849 + 233) ;v56=76 -(34 + 42) ;end elseif (v58==(5835 -3788)) then return ((v57==(0 + (0 -0))) and (v59 * ((1 + 0)/(0 + 0)))) or (v59 * NaN) ;end return v9(v59,v58-(2525 -(1881 -(342 + 37))) ) * (v56 + (v57/((1651 -((1142 -514) + 1021))^(21 + 31)))) ;end local function v38(v39)local v60;if  not v39 then v39=v36();if (v39==(1839 -(586 + 1253))) then return "";end end v60=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;local v61={};for v74=1 + 0 , #v60 do v61[v74]=v3(v2(v4(v60,v74,v74)));end return v7(v61);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v62=0;local v63;local v64;local v65;local v66;local v67;local v68;local v69;while true do if (v62~=(1646 -(749 + 894))) then else v69=nil;while true do local v84=0;while true do if (v84==0) then if (v63==0) then local v102=0;while true do if (v102~=(617 -(457 + 159))) then else local v121=0;while true do if (v121==1) then v102=2 -0 ;break;end if (v121~=(512 -(412 + 100))) then else v66={};v67={v64,v65,nil,v66};v121=1 + 0 ;end end end if (v102==(2 + 0)) then v63=1;break;end if (v102~=0) then else local v122=0 + 0 ;while true do if (v122~=0) then else v64={};v65={};v122=2 -1 ;end if ((1 -0)~=v122) then else v102=2 -1 ;break;end end end end end if (v63~=(1 + 1)) then else for v109=1,v36() do local v110=0;local v111;local v112;while true do if (v110~=(1 + 0)) then else while true do if (v111==0) then v112=v34();if (v30(v112,600 -(345 + 254) ,1722 -(232 + 1489) )==0) then local v129=0;local v130;local v131;local v132;while true do if (v129==2) then local v157=0 -0 ;while true do if (v157==(320 -(59 + 261))) then if (v30(v131,1,1)==1) then v132[2]=v69[v132[2]];end if (v30(v131,7 -5 ,3 -1 )==(1 -0)) then v132[3]=v69[v132[3]];end v157=1;end if (1==v157) then v129=2 + 1 ;break;end end end if (v129==(4 -1)) then if (v30(v131,1 + 2 ,575 -(568 + 4) )~=(2 -1)) then else v132[4]=v69[v132[1457 -(359 + 1094) ]];end v64[v109]=v132;break;end if (v129==1) then local v159=0;while true do if ((0 -0)~=v159) then else v132={v35(),v35(),nil,nil};if (v130==0) then local v210=0 -0 ;local v211;local v212;while true do if (v210==(1 -0)) then while true do if (v211==(1687 -(427 + 1260))) then v212=0;while true do if (v212==0) then v132[1847 -(1356 + 488) ]=v35();v132[4]=v35();break;end end break;end end break;end if (0~=v210) then else v211=1722 -(346 + 1376) ;v212=nil;v210=1;end end elseif (v130==1) then v132[3]=v36();elseif (v130==2) then v132[3]=v36() -(2^(65 -49)) ;elseif (v130~=3) then else local v239=0 + 0 ;local v240;local v241;local v242;while true do if (v239==1) then v242=nil;while true do if (v240~=1) then else while true do if (v241==(0 + 0)) then v242=0 -0 ;while true do if (v242==(372 -(73 + 299))) then v132[1216 -(1128 + 85) ]=v36() -(2^(2 + 14)) ;v132[4]=v35();break;end end break;end end break;end if (v240==(0 + 0)) then v241=160 -(159 + 1) ;v242=nil;v240=1;end end break;end if (v239==0) then v240=0 + 0 ;v241=nil;v239=1 + 0 ;end end end v159=1 + 0 ;end if (v159~=1) then else v129=2;break;end end end if (v129==0) then local v160=1722 -(116 + 1606) ;local v161;while true do if (v160==0) then v161=0;while true do if (v161~=(0 -0)) then else local v214=0;while true do if (v214~=(1 + 0)) then else v161=1 + 0 ;break;end if (v214==0) then v130=v30(v112,1744 -(1699 + 43) ,828 -(203 + 622) );v131=v30(v112,1224 -(535 + 685) ,6);v214=1;end end end if (v161==(1 + 0)) then v129=2 -1 ;break;end end break;end end end end end break;end end break;end if ((781 -(410 + 371))==v110) then local v124=0;local v125;while true do if (0==v124) then v125=0;while true do if ((579 -(180 + 398))==v125) then v110=1 + 0 ;break;end if (v125==0) then local v134=0;while true do if (v134==0) then v111=0 -0 ;v112=nil;v134=1 -0 ;end if (v134~=1) then else v125=1 + 0 ;break;end end end end break;end end end end end for v113=155 -(145 + 9) ,v36() do v65[v113-1 ]=v42();end for v115=1,v36() do v66[v115]=v36();end return v67;end v84=1 + 0 ;end if (v84~=(2 -1)) then else if (v63==1) then local v103=0 -0 ;local v104;while true do if (v103==(0 + 0)) then v104=0 -0 ;while true do if (v104==2) then v63=8 -6 ;break;end if (0~=v104) then else v68=v36();v69={};v104=1;end if (v104==1) then local v126=0 + 0 ;while true do if (v126~=(2 -1)) then else v104=2;break;end if (v126==0) then for v135=1,v68 do local v136=0;local v137;local v138;local v139;local v140;while true do if (v136==0) then v137=0 -0 ;v138=nil;v136=1;end if (v136~=1) then else v139=nil;v140=nil;v136=2 + 0 ;end if (v136==(456 -(130 + 324))) then while true do if (1~=v137) then else v140=nil;while true do if (v138==(0 -0)) then local v216=0;local v217;while true do if ((0 + 0)==v216) then v217=0;while true do if (v217==0) then v139=v34();v140=nil;v217=1 + 0 ;end if (v217==1) then v138=1;break;end end break;end end end if (v138~=(1 + 0)) then else if (v139==1) then v140=v34()~=(0 + 0) ;elseif (v139==(5 -3)) then v140=v37();elseif (v139==(3 + 0)) then v140=v38();end v69[v135]=v140;break;end end break;end if (v137==(25 -(16 + 9))) then local v205=0 -0 ;while true do if (v205==(2 -1)) then v137=1 -0 ;break;end if (v205==(0 -0)) then v138=0;v139=nil;v205=1 -0 ;end end end end break;end end end v67[3]=v34();v126=1 + 0 ;end end end end break;end end end break;end end end break;end if (v62==(520 -(23 + 497))) then local v80=0;while true do if (v80~=1) then else v62=1;break;end if (v80==0) then v63=0;v64=nil;v80=1;end end end if (v62==2) then v67=nil;v68=nil;v62=3;end if (v62==1) then v65=nil;v66=nil;v62=1 + 1 ;end end end local function v43(v44,v45,v46)local v70=0;local v71;local v72;local v73;while true do if (v70==0) then v71=v44[1];v72=v44[2];v70=1;end if (1==v70) then v73=v44[3];return function(...)local v85=0;local v86;local v87;local v88;local v89;local v90;while true do if (v85==2) then v90=nil;v90=function()local v92=v71;local v93=v72;local v94=v73;local v95=v41;local v96={};local v97={};local v98={};for v105=965 -(464 + 501) ,v89 do if (((5449 -(683 + 13))>=(3201 -(570 + 464))) and (v105>=v94)) then v96[v105-v94 ]=v88[v105 + (1 -(0 + 0)) ];else v98[v105]=v88[v105 + (2 -1) ];end end local v99=(v89-v94) + (2 -1) ;local v100;local v101;while true do local v106=1373 -(1241 + 132) ;while true do if (((65 + 42)<=1549) and ((1 + 0)==v106)) then if (((395 + 2446)>=(3572 -(1066 + 310))) and (v101<=(20 -9))) then if ((3451>=2040) and (v101<=(593 -((432 -293) + 449)))) then if (((4823 -(1223 + 658))>=(1897 + 992)) and (v101<=((5 -2) -1))) then if ((v101<=((0 -0) -0)) or (784>(19 + (2367 -(93 + 147))))) then v98[v100[979 -(337 + 640) ]]=v98[v100[5 -2 ]][v100[3 + (3 -2) ]];elseif (((197 + 320)<=(1592 -(469 + (1074 -675)))) and (v101==(2 -1))) then v98[v100[1 + 1 ]]=v98[v100[(10 -2) -5 ]][v98[v100[9 -5 ]]];else v98[v100[3 -1 ]][v100[623 -(220 + 400) ]]=v100[1420 -(161 + 1255) ];end elseif ((v101<=(3 + 0)) or ((1709 + (1143 -425))<(264 + 59))) then local v143=0 -0 ;local v144;local v145;local v146;local v147;while true do if ((v143==(1 + 0)) or ((14374 -(11108 -(272 + 619)))<=(3267 -(128 + 47)))) then v146=nil;v147=nil;v143=3 -1 ;end if (((2077 -(578 + 746))<(3147 -(3632 -(219 + 1413)))) and (v143==(1 + 1))) then while true do if ((v144==(1 -0)) or ((2205 -689)<=(1491 -(5 + 65)))) then v147=nil;while true do if (((4208 -2153)==(3432 -(1120 + 131 + 126))) and (v145==(1732 -(916 + 815)))) then for v234=v146 + (1452 -(1088 + 305 + 58)) ,v100[3 + 1 ] do v147=v147   .. v98[v234] ;end v98[v100[2 + 0 ]]=v147;break;end if (((1168 + 808)==(1008 + 968)) and (v145==((0 -0) -0))) then local v227=1490 -(1275 + 215) ;local v228;while true do if ((v227==(40 -(17 + 23))) or ((3775 -2124)<((75 -42) + 815))) then v228=1402 -(919 + 483) ;while true do if (((3031 + 1147)==(10897 -6719)) and (v228==(2 -1))) then v145=1163 -(1034 + 128) ;break;end if ((v228==(1535 -(1158 + 377))) or ((1479 -(161 + 360))>=(542 + 660))) then local v247=574 -(424 + 150) ;while true do if ((v247==((2182 -(1140 + 606)) -(326 + (624 -(387 + 128))))) or ((3792 + 192)<(5535 -(1587 + 254)))) then v228=1 -0 ;break;end if ((v247==(289 -(129 + 160))) or ((119 + 1590)<(1751 -1264))) then v146=v100[3];v147=v98[v146];v247=1;end end end end break;end end end end break;end if ((((3782 -(942 + 317)) -(5 + 62))<(1564 + 1843)) and (v144==((1755 -(240 + 1515)) -0))) then local v213=0 -0 ;while true do if ((v213==(1509 -(312 + 1197))) or ((3143 + 1251)<(1008 + 446))) then v145=0 -0 ;v146=nil;v213=2 -1 ;end if (((1575 -883)<=(330 + 33 + 792)) and ((2 -1)==v213)) then v144=39 -(12 + 26) ;break;end end end end break;end if (((4170 -(1258 + 663))==(1667 + 582)) and (v143==(0 -0))) then v144=0;v145=nil;v143=130 -(96 + 33) ;end end elseif ((v101==(3 + 1)) or ((6703 -2198)==(3786 -1101))) then v98[v100[2 + 0 ]]={};else v98[v100[1928 -(922 + 1004) ]]=v98[v100[8 -5 ]];end elseif ((v101<=(18 -10)) or ((908 + 3360)>=(6275 -(1861 + 79)))) then if (((5243 -3057)<=((4417 -(596 + 232)) -898)) and (v101<=(4 + (960 -(565 + 393))))) then if ((v98[v100[2 -0 ]]==v100[1089 -(513 + 572) ]) or (4783<=(811 -((213 -170) + 467)))) then v86=v86 + (2 -1) ;else v86=v100[1244 -(967 + 274) ];end elseif (((3989 -1360)<=(5671 -(1258 + 726))) and (v101>(939 -(54 + (1763 -885))))) then local v170=0;local v171;local v172;local v173;while true do if ((v170==(669 -(89 + 253 + 327))) or ((7593 -2834)<(8593 -6314))) then v171=(0 -0) + 0 ;v172=nil;v170=(3550 -2531) -((4232 -3374) + 160) ;end if ((3836<=(1363 + 3419)) and (v170==(2 -(2 -1)))) then v173=nil;while true do if ((((20333 -15259) -(810 + (2363 -(1690 + 214))))==(1141 + (6618 -3954))) and (v171==(4 -3))) then v98[v172 + 1 + (972 -(36 + 936)) ]=v173;v98[v172]=v173[v100[4]];break;end if ((v171==(0 + 0)) or ((3844 -(951 + 221))>((1383 + 3917) -(631 + 123)))) then local v222=0 + 0 ;while true do if (((336 + 621)<=(8832 -5016)) and (v222==(0 -0))) then local v235=213 -(152 + 61) ;while true do if ((v235==(1865 -(1676 + 189))) or ((3453 -1000)<(3433 -2224))) then v172=v100[4 -2 ];v173=v98[v100[1 + 2 ]];v235=1;end if (((1143 + (737 -(28 + 306)))>=(1695 -(364 + 156))) and (v235==(1 + 0))) then v222=1351 -(959 + 391) ;break;end end end if (((797 -(276 + 458))==(51 + 12)) and (v222==(1 -0))) then v171=580 -(502 + 77) ;break;end end end end break;end end else v98[v100[533 -((1900 -(1703 + 42)) + 376) ]][v100[6 -3 ]]=v98[v100[(911 -653) -(204 + 50) ]];end elseif (((4775 -2037)<=(13409 -9197)) and (v101<=(797 -(248 + 468 + 72)))) then local v148=0 -0 ;local v149;local v150;local v151;while true do if ((1==v148) or ((1671 -(254 + 535))==(62 + 678))) then v151=nil;while true do if ((v149==(1761 -(1434 + 327))) or ((2921 -(902 + 21))>=3169)) then v150=0 -0 ;v151=nil;v149=976 -(290 + 685) ;end if (((16313 -12501)>=((1176 -817) + 3441)) and (v149==(1 -0))) then while true do if (((2200 -(160 + 120 + (3182 -(308 + 1410))))<(3375 -(163 + 1529))) and (v150==(0 -0))) then v151=v100[366 -(71 + 293) ];v98[v151](v98[v151 + 1 + 0 ]);break;end end break;end end break;end if ((v148==(0 + 0 + 0)) or ((2209 + 538)<=(1759 -((911 -474) + (1089 -(63 + 4)))))) then v149=0 + 0 ;v150=nil;v148=1 + 0 ;end end elseif (((11016 -6256)>(5514 -(161 + 343 + 256))) and (v101==10)) then if (((3018 -(848 + 111))<(5082 -2447)) and v98[v100[145 -(109 + 34) ]]) then v86=v86 + (2 -(1533 -(930 + 602))) ;else v86=v100[7 -4 ];end else v98[v100[9 -7 ]]=v43(v93[v100[1305 -(1293 + 9) ]],nil,v46);end elseif ((((254 -189) + 1703)==((3881 -(948 + 467)) -(480 + 24 + 194))) and (v101<=(1397 -(110 + 1270)))) then if ((4766>=(1410 + 89)) and (v101<=(52 -38))) then if ((v101<=(866 -(639 + 215))) or ((363 + 315)<=(1235 -686))) then v98[v100[1406 -(1126 + 278) ]]=v100[6 -3 ]~=(1832 -((1437 -(332 + 926)) + 1653)) ;elseif ((v101==(3 + (977 -(778 + 189)))) or ((810 + 603 + 812)>=(21988 -17007))) then v98[v100[1 + 0 + 1 + 0 ]]=v100[2 + 1 ];else local v179=347 -(343 + 4) ;local v180;local v181;local v182;local v183;local v184;while true do if (((15838 -11097)>=(4557 -2328)) and ((0 -0)==v179)) then v180=1127 -(902 + 225) ;v181=nil;v179=124 -(111 + 12) ;end if (((3454 -(481 + 628))<(7581 -3711)) and (v179==(2 + (0 -0)))) then v184=nil;while true do if (((1 + 0)==v180) or ((3231 -(476 + 107))==((11896 -8906) -(1707 + 130)))) then local v223=(0 + 0) -0 ;while true do if ((v223==((3368 -1747) -(100 + (3073 -1552)))) or ((9770 -(1483 + 3916))>(12929 -7938))) then v87=(v183 + v181) -(602 -(442 + 159)) ;v184=331 -(213 + 118) ;v223=1474 -(1283 + 190) ;end if ((v223==(1 + 0)) or ((4885 -(146 + 1461))==(14575 -(11428 -(199 + 999))))) then v180=4 -2 ;break;end end end if (((1646 + 2967)>=(2003 -391)) and (v180==(2 + 0))) then for v230=v181,v87 do local v231=(0 -0) + 0 ;local v232;while true do if (((6975 -3164)>(8717 -6836)) and (v231==(0 -0))) then v232=0 + 0 ;while true do if (((8282 -6367)<(4209 -(1495 + 236))) and (v232==(0 -0))) then v184=v184 + ((1758 -(1376 + 380)) -1) ;v98[v230]=v182[v184];break;end end break;end end end break;end if ((v180==0) or ((2484 -(2277 -1070))==(3223 -(646 + 935)))) then local v224=0 + 0 ;while true do if ((v224==(0 -0)) or ((927 + (1788 -1393))==(11543 -6907))) then v181=v100[(4 + 4) -6 ];v182,v183=v95(v98[v181](v14(v98,v181 + (1 -0) ,v100[6 -3 ])));v224=1802 -(1038 + 763) ;end if (((7824 -4916)==(2201 + 707)) and (v224==(1 + 0))) then v180=359 -(81 + 8 + 269) ;break;end end end end break;end if ((v179==((1 -0) + 0)) or ((388 -250)>=(2437 -(204 + 685)))) then v182=nil;v183=nil;v179=908 -(225 + 681) ;end end end elseif ((v101<=(15 + 0)) or (((4524 -(1178 + 274)) + 13)<(874 -((270 -165) + 94)))) then local v153=0 -0 ;local v154;while true do if ((v153==(0 + 0)) or ((5100 -2932)==((1961 + 563) -(345 + 345)))) then v154=v100[1442 -(50 + (3239 -1849)) ];v98[v154]=v98[v154]();break;end end elseif ((v101==(1141 -(466 + 659))) or (((46207 -34158) -7503)==(140 + 126))) then local v185=0 + 0 ;local v186;local v187;while true do if (((1085 + 1103)>486) and (v185==(1 + 0))) then while true do if (((5429 -2233)>(1307 + 515 + 475)) and (v186==(0 + 0))) then v187=v100[2 + 0 ];v98[v187](v14(v98,v187 + (1 -(482 -(92 + 390))) ,v100[(1 -0) + 2 ]));break;end end break;end if (((4076 -((1587 -(937 + 553)) + 679))==(4776 -(521 + 955))) and (v185==(86 -(50 + 3 + 33)))) then v186=0 -0 ;v187=nil;v185=688 -(333 + 15 + 339) ;end end else local v188=0;local v189;local v190;local v191;while true do if (((2644 -(928 + 518))>(97 + (2348 -(377 + 1444)))) and (v188==(0 -0))) then v189=0;v190=nil;v188=1 -0 ;end if ((v188==(655 -(190 + 464))) or ((3824 + 674)==(5477 -(639 + 1044)))) then v191=nil;while true do if (((3771 -(178 + 26))<=(5423 -(385 + 670))) and ((0 + 0)==v189)) then v190=0 + 0 ;v191=nil;v189=1874 -(1578 + 260 + 35) ;end if ((((9047 -5389) -2544)<=(1554 + 40)) and (v189==(1 -0))) then while true do if ((v190==(0 -0)) or ((1981 + 431 + 2060)<(34 + 2142))) then v191=v100[6 -4 ];v98[v191]=v98[v191](v14(v98,v191 + (2 -1) ,v87));break;end end break;end end break;end end end elseif (((4174 -(308 + 968))==(1578 + 1320)) and (v101<=(1762 -(483 + 1259)))) then if ((((1233 + 3267) -((1465 -759) + (2242 -(1356 + 241))))>=2537) and (v101<=(5 + 13))) then local v155=0 -0 ;local v156;while true do if ((v155==(0 + 0)) or ((4492 -(447 + 381))<(4678 -(92 + 1731)))) then v156=v100[494 -(109 + 100 + 283) ];v98[v156]=v98[v156](v14(v98,v156 + 1 + 0 ,v100[1 + 2 ]));break;end end elseif (((2068 -(1054 + 98 + 10))<=(5492 -(892 + 686))) and (v101>(37 -18))) then v98[v100[1945 -(1607 + 336) ]]=v46[v100[3]];else for v201=v100[(74 -(15 + 57)) -0 ],v100[1523 -(322 + 1198) ] do v98[v201]=nil;end end elseif ((v101<=(59 -37)) or ((3232 -(1553 + 149))>=(3615 -(120 + 246)))) then if ((v101>(68 -47)) or ((1246 -(237 + 147))>(7106 -2514))) then v86=v100[6 -3 ];else v98[v100[1 + 1 ]]();end elseif (((5 + 13)<=(531 + 1365)) and (v101>23)) then do return;end elseif ((v100[2 -0 ]==v98[v100[894 -(196 + 694) ]]) or ((2765 + (700 -369))<(499 -277))) then v86=v86 + (1 -0) ;else v86=v100[7 -4 ];end v86=v86 + (592 -(361 + 230)) ;break;end if (((2179 + (1198 -(70 + 392)))>(1972 -(653 + 221))) and (v106==(1583 -(1242 + 341)))) then local v123=0 -0 ;while true do if ((((1282 -(221 + 141)) -(904 + 16))==v123) or ((2604 + 1057)>(6335 -(1459 + 8)))) then v100=v92[v86];v101=v100[1];v123=1491 -(1349 + 141) ;end if (((2149 -1480)<(8226 -(1639 + 4151))) and (v123==(345 -(281 + 63)))) then v106=1237 -(967 + 269) ;break;end end end end end end;v85=3;end if (v85==1) then v88={...};v89=v13("#",...) -1 ;v85=2;end if (v85==0) then v86=1;v87= -1;v85=1;end if (v85==3) then A,B=v41(v12(v90));if  not A[1] then local v107=0;local v108;while true do if (v107==0) then v108=v44[4][v86] or "?" ;error("Script error at ["   .. v108   .. "]:"   .. A[2] );break;end end else return v14(A,2,B);end break;end end end;end end end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end