do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v69=v2(v0(v20,16));if v19 then local v79=v5(v69,v19);v19=nil;return v79;else return v69;end end end);local function v21(v22,v23,v24)if v24 then local v70=(v22/((210 -(54 + 154))^(v23-(1900 -(76 + 1823)))))%((1816 -(412 + 1402))^(((v24-((6 -3) -2)) -(v23-((1 + 1) -1))) + (1394 -((914 -678) + 1157))));return v70-(v70%1);else local v71=0 -0;local v72;while true do if (v71==(0 -0)) then v72=(1833 -(476 + 1355))^(v23-(1 -0));return (((v22%(v72 + v72))>=v72) and (1 -0)) or (1112 -(162 + 950));end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39=0 -0;local v40;local v41;while true do if (v39==(4 -3)) then return (v41 * (22 + 36 + 198)) + v40;end if (v39==((1138 -(609 + 529)) + 0)) then v40,v41=v1(v16,v18,v18 + 2 + 0 + 0);v18=v18 + 2 + 0;v39=(3 -2) -0;end end end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + (11 -8));v18=v18 + (1621 -(1528 + 51 + 38));return (v45 * ((59991477 -43212262) -(724 + 1275))) + (v44 * (66429 -(756 + 137))) + (v43 * (142 + 114)) + v42;end local function v28()local v46=1220 -(836 + 384);local v47;local v48;local v49;local v50;local v51;local v52;while true do if ((1 -0)==v46) then v49=1 + 0;v50=(v21(v48,1 + 0,(46 + 3) -29) * ((1654 -(101 + 1551))^((50 + 56) -(16 + 58)))) + v47;v46=1 + 0 + 1;end if (v46==(628 -(366 + 262))) then v47=v27();v48=v27();v46=132 -(101 + 30);end if (v46==(253 -(169 + 81))) then if (v51==(405 -(254 + 151))) then if (v50==0) then return v52 * (0 -0);else v51=3 -2;v49=0 -0;end elseif (v51==((911 -(27 + 28)) + 1191)) then return ((v50==(0 -(0 -0))) and (v52 * ((234 -(151 + 82))/(1997 -(828 + 1169))))) or (v52 * NaN);end return v8(v52,v51-(2767 -(820 + 924))) * (v49 + (v50/((620 -(208 + 410))^(25 + 27))));end if ((1 + 1 + 0)==v46) then v51=v21(v48,1230 -((1096 -570) + 683),293 -(33 + 229));v52=((v21(v48,(1718 + 70) -(797 + 959))==(2 -1)) and  -((589 -442) -(20 + 126))) or (476 -(64 + 411));v46=3 + 0;end end end local function v29(v30)local v53;if  not v30 then local v73=0 -0;while true do if (v73==(0 -(0 -0))) then v30=v27();if (v30==(0 -0)) then return "";end break;end end end v53=v3(v16,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;local v54={};for v67=1, #v53 do v54[v67]=v2(v1(v3(v53,v67,v67)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 + 0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55~=0) then else v56=295 -(155 + 140);v57=nil;v55=1 -0;end if (v55~=(1 + 1)) then else local v74=0 -0;while true do if (0==v74) then v60=nil;v61=nil;v74=4 -3;end if (v74==(44 -(22 + 21))) then v55=1524 -(234 + 1287);break;end end end if (v55~=(7 -4)) then else v62=nil;while true do local v80=0;local v81;local v82;while true do if ((1932 -(1756 + 176))~=v80) then else v81=587 -(232 + 355);v82=nil;v80=3 -2;end if (v80~=(2 -1)) then else while true do if (v81==(0 + 0)) then v82=1196 -(237 + 959);while true do if ((0 + 0)==v82) then local v108=0;while true do if (v108~=(0 -0)) then else if (v56==(4 -1)) then local v116=0 + 0;local v117;while true do if (v116==(0 + 0)) then v117=491 -(456 + 35);while true do local v123=0 -0;while true do if (v123~=(0 -0)) then else if (v117~=0) then else local v201=0 + 0;while true do if (v201~=(0 -0)) then else local v238=0;while true do if (v238==(1 + 0)) then v201=1407 -(1185 + 221);break;end if (v238==(0 + 0)) then for v268=3 -2,v27() do v58[v268-1]=v33();end for v270=1 + 0,v27() do v59[v270]=v27();end v238=3 -2;end end end if (v201~=1) then else v117=1;break;end end end if (v117~=(1 + 0)) then else return v60;end break;end end end break;end end end if (v56==(0 -0)) then local v118=0 + 0;local v119;while true do if (v118~=(1532 -(738 + 794))) then else v119=0 + 0;while true do if (0==v119) then local v127=0;while true do if (v127==0) then v57={};v58={};v127=1 + 0;end if (v127==(3 -2)) then v119=1 + 0;break;end end end if (v119==(1 + 0)) then v59={};v56=1483 -(932 + 550);break;end end break;end end end v108=1;end if (1==v108) then v82=2 -1;break;end end end if (v82==(1 + 0)) then if (v56~=(4 -3)) then else local v109=0;local v110;local v111;while true do if (v109~=(1 + 0)) then else while true do if (v110~=(0 + 0)) then else v111=1232 -(1119 + 113);while true do if (v111==0) then local v128=1443 -(1256 + 187);local v129;while true do if (v128==(0 -0)) then v129=1059 -(731 + 328);while true do if (v129==(2 -1)) then v111=1 -0;break;end if (v129==(0 + 0)) then local v239=764 -(106 + 658);while true do if (v239~=1) then else v129=1 + 0;break;end if ((0 + 0)==v239) then v60={v57,v58,nil,v59};v61=v27();v239=1 + 0;end end end end break;end end end if ((1 + 0)==v111) then v62={};v56=3 -1;break;end end break;end end break;end if (v109==0) then v110=1721 -(350 + 1371);v111=nil;v109=1 + 0;end end end if ((2 -0)==v56) then local v112=0 + 0;local v113;while true do if (v112~=0) then else v113=0 -0;while true do if (v113==(0 -0)) then local v120=0 + 0;local v121;while true do if (v120~=(0 -0)) then else v121=0;while true do if (v121==(1 + 0)) then v113=3 -2;break;end if (v121==0) then for v221=1582 -(1305 + 276),v61 do local v222=0;local v223;local v224;local v225;while true do if (v222==1) then v225=nil;while true do if (v223~=(1169 -(491 + 677))) then else if (v224==(964 -(711 + 252))) then v225=v25()~=0;elseif (v224==(881 -(297 + 582))) then v225=v28();elseif (v224==3) then v225=v29();end v62[v221]=v225;break;end if (v223~=(289 -(122 + 167))) then else local v273=1846 -(355 + 1491);while true do if (v273==(1 -0)) then v223=1 -0;break;end if (v273~=(1489 -(1263 + 226))) then else v224=v25();v225=nil;v273=1;end end end end break;end if (v222~=0) then else v223=0 + 0;v224=nil;v222=1;end end end v60[3 + 0]=v25();v121=2 -1;end end break;end end end if (v113~=1) then else for v124=1,v27() do local v125=0 + 0;local v126;while true do if ((0 -0)==v125) then v126=v25();if (v21(v126,368 -(306 + 61),1141 -(447 + 693))==0) then local v203=1362 -(1161 + 201);local v204;local v205;local v206;local v207;while true do if ((913 -(41 + 871))~=v203) then else local v240=10 -(6 + 4);while true do if (v240~=(1 + 0)) then else v203=2 + 0;break;end if (v240==(0 -0)) then v206=nil;v207=nil;v240=1 + 0;end end end if (v203~=(5 -3)) then else while true do if (v204==1) then v207={v26(),v26(),nil,nil};if (v205==(0 + 0)) then local v289=0;local v290;while true do if (v289==(1371 -(772 + 599))) then v290=0 -0;while true do if (v290~=(0 -0)) then else v207[1908 -(1578 + 327)]=v26();v207[7 -3]=v26();break;end end break;end end elseif (v205==(1585 -(924 + 660))) then v207[5 -2]=v27();elseif (v205==(1 + 1)) then v207[3]=v27() -((5 -3)^(1389 -(167 + 1206)));elseif (v205~=(1832 -(1599 + 230))) then else local v327=1438 -(996 + 442);local v328;local v329;while true do if ((2 -1)==v327) then while true do if (v328==(0 -0)) then v329=0;while true do if (v329==(0 + 0)) then v207[1552 -(516 + 1033)]=v27() -((9 -7)^(1090 -(247 + 827)));v207[4]=v26();break;end end break;end end break;end if (v327==(0 + 0)) then v328=12 -(9 + 3);v329=nil;v327=419 -(232 + 186);end end end v204=801 -(211 + 588);end if (v204==2) then local v262=0;local v263;while true do if (v262==(0 + 0)) then v263=633 -(167 + 466);while true do if ((1 + 0)==v263) then v204=2 + 1;break;end if (v263==0) then local v314=0;while true do if (v314~=0) then else if (v21(v206,1 -0,1 + 0)~=(2 -1)) then else v207[2]=v62[v207[5 -3]];end if (v21(v206,2 + 0,1256 -(6 + 1248))~=(1496 -(1353 + 142))) then else v207[902 -(867 + 32)]=v62[v207[1698 -(1523 + 172)]];end v314=1964 -(196 + 1767);end if (v314==1) then v263=1;break;end end end end break;end end end if ((12 -9)==v204) then if (v21(v206,13 -10,3 + 0)~=(1261 -(895 + 365))) then else v207[2 + 2]=v62[v207[17 -13]];end v57[v124]=v207;break;end if (v204==(523 -(447 + 76))) then local v265=0 + 0;while true do if (0~=v265) then else v205=v21(v126,2 + 0,3 -0);v206=v21(v126,4 + 0,1853 -(717 + 1130));v265=1;end if (v265==(1 -0)) then v204=1;break;end end end end break;end if (v203==(1154 -(120 + 1034))) then local v241=0 -0;while true do if (v241==0) then v204=0;v205=nil;v241=2 -1;end if (v241~=(761 -(520 + 240))) then else v203=1626 -(321 + 1304);break;end end end end end break;end end end v56=3;break;end end break;end end end break;end end break;end end break;end end end break;end if (v55==(1 -0)) then local v75=0;while true do if (v75==(1 + 0)) then v55=2;break;end if (v75==(886 -(218 + 668))) then v58=nil;v59=nil;v75=1 -0;end end end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end if (v63==1) then v66=v35[3];return function(...)local v83=1;local v84= -1;local v85={...};local v86=v12("#",...) -1;local function v87()local v88=v64;local v89=v65;local v90=v66;local v91=v32;local v92={};local v93={};local v94={};for v98=0 -0,v86 do if ((2317==((17491 -12147) -3027)) and (v98>=v90)) then v92[v98-v90]=v85[v98 + 1 + 0];else v94[v98]=v85[v98 + (2 -1)];end end local v95=(v86-v90) + 1;local v96;local v97;while true do local v99=0 -0;local v100;local v101;while true do if ((v99==1) or ((5324 -((552 -346) + 378))<(3668 -(27 + 314)))) then while true do if (((49 + 26 + 76)<(2839 -(415 + 1524))) and (0==v100)) then v101=329 -(197 + 132);while true do if ((((233 + 234) -284)<=(551 + 761)) and (v101==(1 + 0))) then if ((2908>=(981 -(88 + 10))) and (v97<=(8 + 8))) then if (((11178 -(14015 -6300))>=((1660 -(1109 + 337)) + 902)) and (v97<=(5 + 2))) then if (((3334 -1712)<(10402 -5508)) and (v97<=(3 + 0))) then if ((v97<=(1777 -(1735 + 41))) or (2719<=707)) then if ((1073>(3 + 116)) and (v97==((0 -0) + 0))) then local v132=0 + (945 -(710 + 235));local v133;while true do if ((v132==((443 -(80 + 363)) + 0)) or ((4568 -(109 + 992))<(2295 + 167))) then v133=v96[4 -2];v94[v133]=v94[v133](v13(v94,v133 + 1,v96[4 -1]));break;end end elseif (((1249 -(322 + 326))==(1245 -(579 + 65))) and (v96[1252 -(113 + 1137)]==v94[v96[4]])) then v83=v83 + (4 -3);else v83=v96[3];end elseif ((1132<(8175 -5759)) and (v97==(4 -2))) then v94[v96[2 + 0]]=v94[v96[8 -5]];elseif ( not v94[v96[703 -(70 + 414 + 217)]] or ((4338 -3135)==1979)) then v83=v83 + ((2 + 0) -1);else v83=v96[323 -(265 + 21 + 34)];end elseif ((v97<=(1355 -((1408 -(1175 + 61)) + 1178))) or ((1893 -654)>=1590)) then if (((3707 -1013)>(2029 -1018)) and (v97>4)) then v37[v96[3]]=v94[v96[1 + 1]];else local v138=0 + (0 -0);local v139;local v140;local v141;local v142;while true do if ((v138==((304 -177) -(73 + 54))) or (3675<=(2776 -(329 + 542)))) then v139=0 -0;v140=nil;v138=1;end if (((6473 -3844)<=(3922 -(855 + 356))) and (v138==(634 -(400 + 233)))) then v141=nil;v142=nil;v138=1 + 1;end if ((v138==(2 + 0)) or ((4770 -(283 + 1702))<=2615)) then while true do if (((1506 -1003)==((1693 -(548 + 1025)) + 383)) and (v139==(1 + 0))) then v142=nil;while true do if ((v140==((526 -(50 + 476)) -0)) or ((2537 -(2592 -1307))<(2410 -1805))) then local v274=0 -0;while true do if ((2379==2379) and (v274==(1209 -(1101 + 107)))) then v140=1 + 0;break;end if ((3308>2728) and (v274==(0 + 0))) then v141=v96[1054 -(100 + 952)];v142={};v274=1 + 0;end end end if (((1021 + 2207)>(10838 -8259)) and (v140==(1 + 0))) then for v293=2 -1, #v93 do local v294=0 -0;local v295;local v296;while true do if ((v294==(1376 -(951 + 424))) or ((44 + 3443)>3754)) then while true do if ((v295==(0 + 0)) or (4453<=(8169 -(501 + 4761)))) then v296=v93[v293];for v342=0, #v296 do local v343=300 -(80 + 220);local v344;local v345;local v346;local v347;while true do if ((v343==0) or ((1839 + 194)>=(2456 -(24 + (1355 -(884 + 423)))))) then v344=263 -(97 + 166);v345=nil;v343=1029 -(127 + 901);end if ((4823==4823) and (2==v343)) then while true do if (((584 + 105)>=(313 -(251 + 2))) and (v344==(3 -2))) then v347=v345[1 + (1 -0)];if (((v346==v94) and (v347>=v141)) or ((1613 + 2153)<=(907 + 1426))) then local v365=0 + 0 + 0;local v366;while true do if ((((6362 -(246 + 295)) -3060)==(7704 -4943)) and (v365==((1460 -(1035 + 425)) -0))) then v366=0 + 0;while true do if (((8931 -3984)==(5213 -(33 + 233))) and (v366==(0 -0))) then v142[v347]=v346[v347];v345[1]=v142;break;end end break;end end end break;end if (((1631 -810)<4691) and (v344==(0 + 0))) then local v362=0 -0;while true do if ((v362==((1941 -1100) -(508 + 44 + 288))) or (1577>=3991)) then v344=1 + 0;break;end if (((3864 -(4 + 34))>(7962 -4641)) and (v362==(1146 -((1282 -(278 + 260)) + 402)))) then v345=v296[v342];v346=v345[1 + 0];v362=1 + 0;end end end end break;end if ((v343==(1 -0)) or ((2708 -(1193 + 566))>3446)) then v346=nil;v347=nil;v343=2 -0;end end end break;end end break;end if ((v294==(0 + 0 + 0)) or (3142<=(2399 + 718))) then v295=865 -(456 + (628 -219));v296=nil;v294=1357 -(1285 + 71);end end end break;end end break;end if ((v139==(1800 -((3074 -(532 + 1356)) + 614))) or (1070>=3095)) then local v245=(77 -(48 + 29)) -0;while true do if ((v245==(0 -0)) or ((4021 -(213 + 1193))<=2607)) then v140=0 + 0;v141=nil;v245=(5 -3) -1;end if (((2544 -(420 + 226 + 316 + 202))>=(2470 -(748 + 1210))) and (v245==(1 + 0))) then v139=1 + 0;break;end end end end break;end end end elseif ((v97>((1 -0) + 5)) or ((6432 -(61 + 1506))<=(1061 + 653))) then v94[v96[2 + 0]][v96[597 -(578 + 16)]]=v96[225 -(176 + 45)];else local v145=0 + 0 + 0;local v146;local v147;while true do if (((8474 -3749)==4725) and (v145==(0 + (0 -0)))) then v146=0 + 0;v147=nil;v145=1 + 0;end if (((1092 + 3251)>(3054 -1084)) and (v145==(1 + 0))) then while true do if ((v146==(750 -(559 + 41 + 150))) or ((1111 + 1577)<=(146 + 1013))) then v147=v96[2];v94[v147]=v94[v147](v94[v147 + 1]);break;end end break;end end end elseif ((v97<=(11 + 0)) or ((411 -244)>=758)) then if (((7898 -4018)==(4117 -((232 -116) + 121))) and (v97<=(21 -(10 + 2)))) then if ((v97>(27 -19)) or ((4793 -(494 + 396))==(2183 -(136 + 76 + 10)))) then local v148=0 -0;local v149;local v150;while true do if ((((1 -0) + 0)==v148) or ((376 -(1472 -(951 + 248)))==(11158 -8365))) then while true do if ((v149==(0 + 0)) or ((1760 -1123)>(3217 -(1295 + 296)))) then v150=v96[2];v94[v150]=v94[v150]();break;end end break;end if ((1026>=(277 + 526)) and (v148==(31 -(26 + 5)))) then v149=0;v150=nil;v148=1 + 0;end end elseif ((((2858 + 180) -(292 + 879))==(2715 -(80 + (905 -(43 + 94))))) and v94[v96[(5026 -3043) -(194 + 719 + 1068)]]) then v83=v83 + (352 -((1074 -(765 + 109)) + 151));else v83=v96[1263 -(613 + 647)];end elseif ((((6390 -(869 + 171)) -(100 + 1540))==(1330 + 2380)) and (v97>10)) then if ((152<=(1456 + 742)) and (v94[v96[3 -1]]==v94[v96[(2 -1) + 3]])) then v83=v83 + (1 -0);else v83=v96[3];end else v94[v96[97 -(44 + 51)]]=v37[v96[(914 + 996) -(1244 + 663)]];end elseif ((2723==2723) and (v97<=(1754 -(1726 + 15)))) then if (((3527 -(1016 + 919))<2851) and (v97==(1 + 11))) then local v153=0 + 0;local v154;local v155;while true do if ((v153==(1 + 0)) or ((741 -520)>=4364)) then while true do if (((4942 -(608 + 339))>(12 + 2513)) and (v154==0)) then v155=v96[(2355 -(69 + 1204)) -(893 + 187)];v94[v155]=v94[v155](v13(v94,v155 + 1 + 0,v84));break;end end break;end if (((2344 -((481 -(61 + 359)) + 409))>(2419 -(1084 + 32 + 358))) and ((0 -0)==v153)) then v154=615 -(110 + 505);v155=nil;v153=1 + 0;end end else v94[v96[1 + 1]]=v94[v96[3]][v96[1043 -(590 + 449)]];end elseif ((v97<=14) or ((19623 -14893)<(3044 + 503))) then local v158=0 + 0;local v159;local v160;local v161;local v162;local v163;while true do if (((4138 -(2863 -(141 + 1009)))==(6072 -(9428 -5781))) and (v158==(3 -1))) then v163=nil;while true do if ((v159==(2 + 0)) or ((549 + 990)>=(7767 -4651))) then while true do if (((1178 + 1373)<2640) and (v160==1)) then v163=0 + (0 -0);for v297=v161,v96[6 -2] do local v298=0 + 0;local v299;while true do if (((2660 -(574 + 407))<(9773 -7088)) and (v298==(666 -(582 + 84)))) then v299=0;while true do if (((6709 -(612 + 1337))>(1334 + 34 + 999)) and (v299==(0 -0))) then v163=v163 + (1 -(0 + 0));v94[v297]=v162[v163];break;end end break;end end end break;end if ((((6416 -4845) + 790)<=(5299 -(222 + 226))) and (v160==0)) then local v275=1813 -(1268 + 545);local v276;while true do if (((2952 -1117)<=(2343 -(23 + 36))) and (v275==((0 + 0) -0))) then v276=1751 -(765 + (3580 -2594));while true do if ((v276==(1223 -(147 + 1075))) or (333>(279 + 3797))) then v160=1 -0;break;end if ((v276==(0 + 0)) or ((8584 -5515)<=(3778 -(170 + (1559 -527))))) then local v317=1001 -(642 + (1250 -(814 + 77)));while true do if ((v317==(1718 -((1840 -836) + 714))) or (1085>=(1270 + 1061))) then v161=v96[2];v162={v94[v161](v13(v94,v161 + (1164 -(850 + 313)),v84))};v317=1323 -(1068 + 254);end if ((2154<=(4017 -(163 + 784))) and (v317==((2 -1) + 0))) then v276=(3 -1) -1;break;end end end end break;end end end end break;end if ((v159==(0 + 0)) or ((6566 -(11 + 1882))==(13582 -9109))) then v160=(4028 -2887) -((283 -177) + (1207 -(32 + 140)));v161=nil;v159=3 -2;end if ((v159==1) or ((625 + 195)>(2348 + 1728))) then v162=nil;v163=nil;v159=1099 -(456 + 641);end end break;end if (((11601 -7184)==(4868 -(9 + 442))) and (v158==(0 -0))) then v159=0 + 0 + 0;v160=nil;v158=180 -(120 + 59);end if ((4243>=((259 + 3441) -2240)) and (v158==(250 -(175 + 74)))) then v161=nil;v162=nil;v158=(1030 -(761 + 267)) -0;end end elseif ((v97>(416 -(375 + 26))) or ((1579 + 236)>(4956 -(38 + 9)))) then local v212=0 + (525 -(192 + 333));local v213;local v214;local v215;local v216;local v217;while true do if (((247 + 971)<(4528 -(1427 + 3))) and ((1 + 0)==v212)) then v215=nil;v216=nil;v212=(2 -0) -0;end if (((4250 -(719 + (3198 -(1729 + 254))))>(153 + 398)) and (v212==(0 + 0))) then v213=1588 -(491 + 1097);v214=nil;v212=1;end if (((5511 -3917)<=(5494 -(14 + 804 + 566 + 156))) and (v212==2)) then v217=nil;while true do if ((3622>=(2053 + 683)) and (v213==(248 -(143 + 105)))) then local v266=0 + 0;while true do if ((3514<=(10874 -6503)) and (v266==(1 + (737 -(297 + 440))))) then v213=1;break;end if ((v266==0) or ((2843 -(130 + 94))>(5922 -((6284 -4724) + 250)))) then v214=v96[1450 -(66 + 1382)];v215,v216=v91(v94[v214](v13(v94,v214 + 1 + 0,v96[1 + 0 + 2])));v266=1;end end end if ((v213==(1 + 0 + 0)) or ((2046 -(154 + 174))>=(1110 + (3960 -(401 + 650))))) then v84=(v216 + v214) -(1 -0);v217=0;v213=7 -5;end if ((3997>=((9058 -(1133 + 533)) -5152)) and (v213==(76 -(38 + 36)))) then for v277=v214,v84 do local v278=(0 -0) -0;local v279;while true do if ((v278==(0 -0)) or ((1387 -(2449 -(1222 + 210)))>=4746)) then v279=0;while true do if ((v279==(957 -(685 + 272))) or ((5492 -((1754 -(577 + 506)) + 659))<(90 + 9))) then v217=v217 + 1;v94[v277]=v215[v217];break;end end break;end end end break;end end break;end end elseif ((v94[v96[1 + 1]]==v96[(1443 + 469) -(1651 + (1075 -(139 + 679)))]) or (((1473 + 651) -(866 + 377 + 165))<(1117 -(164 + 244)))) then v83=v83 + (711 -(161 + 549));else v83=v96[176 -(147 + 26)];end elseif (((9842 -7379)<=4646) and (v97<=24)) then if ((v97<=20) or ((2761 -(865 + 152))>2760)) then if (((2173 -(14 + 1654 + 67))<(1591 + 371)) and (v97<=(29 -11))) then if (((4145 + 43 + 155)<=(6739 -(276 + 1479))) and (v97>(6 + 11))) then local v164=0 -(0 + 0);local v165;local v166;local v167;local v168;local v169;while true do if (((1232 -(423 + 808))==v164) or (1179>=(1989 + 889))) then v167=nil;v168=nil;v164=5 -3;end if (((2511 + 1151)>(1632 -871)) and (v164==(827 -(272 + 553)))) then v169=nil;while true do if (((5 -3)==v165) or ((336 + (11020 -7629))<=(2392 -(24 + 39)))) then while true do if ((v166==(0 + 0)) or ((2034 -1385)>(2170 + 1029))) then local v280=0;while true do if (((1035 -(227 + 223 + (484 -(307 + 156))))<(86 + 2146)) and (v280==0)) then local v311=0;while true do if ((v311==0) or (4922<=(6921 -2299))) then v167=v89[v96[3 + 0]];v168=nil;v311=1737 -(526 + 1210);end if ((1245==(2281 -(183 + 853))) and (v311==1)) then v280=1 + 0;break;end end end if (((17053 -12694)==(13826 -9467)) and (v280==(1 + 0 + 0))) then v166=1956 -(1672 + 283);break;end end end if ((v166==2) or ((2923 -(49 + 263))<=2287)) then for v300=2 -1,v96[2 + 2] do local v301=0 + (0 -0);local v302;local v303;while true do if ((v301==(1 + 0)) or ((852 + (1529 -(565 + 873)))>(1462 + 322))) then while true do if ((v302==((0 + 0) -0)) or (3964<206)) then v83=v83 + 1 + 0;v303=v88[v83];v302=1 + (1644 -(1496 + 148));end if (((1137 + 418)<=(4156 -((5266 -4145) + 798))) and (v302==1)) then if (((5525 -3176)<=((1659 -455) + 1224)) and (v303[1551 -(279 + 1271)]==((1762 -(462 + 1298)) + 0))) then v169[v300-(1 + 0)]={v94,v303[14 -11]};else v169[v300-(1 + 0 + 0)]={v36,v303[13 -10]};end v93[ #v93 + (4 -3)]=v169;break;end end break;end if ((v301==(0 -0)) or (3871<=(361 + 1845))) then v302=1717 -(723 + 994);v303=nil;v301=1;end end end v94[v96[4 -2]]=v34(v167,v168,v37);break;end if ((v166==(1 -(0 + 0))) or ((162 -((641 -510) + 28))>((1714 + 2012) -1960))) then local v282=592 -((659 -(89 + 423)) + (1879 -1434));while true do if ((524<=(2389 -1668)) and ((0 + 0)==v282)) then local v312=1700 -(108 + 1592);while true do if ((1992==(3891 -(1170 + 729))) and (v312==(1 + 0))) then v282=904 -(517 + 386);break;end if ((v312==(0 + 0)) or ((849 + 565)==(4511 -(98 + 878)))) then v169={};v168=v10({},{["__index"]=function(v321,v322)local v335=0 + 0;local v336;local v337;local v338;while true do if (((69 + 107)<=(332 + 1873)) and (v335==1)) then v338=nil;while true do if (((12792 -9588)>=(2264 -(1119 + 385))) and (0==v336)) then local v358=0 -0;while true do if (((6288 -4159)>(544 + 900)) and (v358==(0 -0))) then v337=458 -(213 + 245);v338=nil;v358=1 + (128 -(55 + 73));end if ((v358==(1857 -(1282 + 574))) or (1932<(577 + (1463 -(748 + 582))))) then v336=1;break;end end end if (((426 + 1219)>=(1620 -(805 + 412))) and (v336==(1344 -(751 + 592)))) then while true do if ((v337==(0 + 0)) or ((2150 -(373 + 408))<(383 + 807))) then local v367=0 + 0;local v368;while true do if (((2 + 3 + 87)==((159 -75) + 8)) and (v367==(0 + 0))) then v368=(2773 -(758 + 116)) -(1059 + 840);while true do if ((v368==(1432 -(173 + 1259))) or (150>=960)) then local v374=(1345 -(128 + 1217)) -0;while true do if ((v374==(1204 -(1138 + 66))) or ((589 + (2040 -(1139 + 424)))==((12145 -8928) -(460 + 58)))) then v338=v169[v322];return v338[(752 -(290 + 461)) + (1744 -(593 + 1151))][v338[1926 -((1185 -602) + 1341)]];end end end end break;end end end end break;end end break;end if (((3652 + 921)==4573) and (v335==(609 -(153 + 456)))) then v336=0 + 0;v337=nil;v335=1211 -(696 + 514);end end end,["__newindex"]=function(v321,v322,v323)local v339=0 -0;local v340;local v341;while true do if ((v339==((1937 -(331 + 112)) -(667 + 827))) or (2973<(2637 -1300))) then v340=0 -0;v341=nil;v339=1;end if (((2838 -(248 + 890))>=1528) and (v339==(2 -1))) then while true do if ((v340==(0 + 0)) or ((3285 -(6 + 1021))>=(4300 -(363 + 373)))) then v341=v169[v322];v341[1 -0][v341[(3 + 0) -1]]=v323;break;end end break;end end end});v312=1 + 0;end end end if ((v282==(1567 -(1065 + 501))) or ((2786 -918)>=(3738 -(918 + 127)))) then v166=2 + 0;break;end end end end break;end if ((v165==1) or ((1307 + 1715)<(3451 -2613))) then local v252=0 + 0;while true do if (((2762 -(284 + 1497))==(2397 -(128 + 1288))) and (0==v252)) then v168=nil;v169=nil;v252=2 -1;end if ((v252==(1 + 0 + 0)) or (((3104 -(69 + 1053)) -(1288 -280))>(1186 + 2))) then v165=2;break;end end end if ((v165==(0 + 0)) or ((3295 -1948)<=454)) then local v253=0;while true do if (((2340 -930)>=(188 + 413)) and ((1142 -(271 + 870))==v253)) then v165=3 -2;break;end if ((v253==(0 + 0)) or ((318 + 3515 + 38)<=489)) then v166=0 + 0;v167=nil;v253=696 -(481 + 214);end end end end break;end if ((v164==(0 + 0)) or (872>=(793 + 1407))) then v165=0 -0;v166=nil;v164=1;end end else local v170=1458 -(1395 + 29 + 34);local v171;local v172;local v173;local v174;local v175;local v176;while true do if (((255 + 851)>(712 -(115 + 147))) and (((214 + 965) -(1086 + 92))==v170)) then v173=nil;v174=nil;v170=1 + 1;end if ((v170==(839 -(333 + 506))) or (4519<(13067 -9516))) then v171=0 + 0;v172=nil;v170=1 -0;end if (((604 + 798)>(1337 -867)) and (v170==2)) then v175=nil;v176=nil;v170=5 -(381 -(320 + 59));end if ((v170==3) or ((10890 -6659)==(4891 -1940))) then while true do if (((2 -(1714 -(1043 + 671)))==v171) or (139>(758 + 1659))) then v176=nil;while true do if ((v172==(1235 -(404 + 517 + 312))) or ((3771 -(704 + 123))<=(1610 -(2606 -(518 + 874))))) then for v304=v173,v84 do local v305=0;local v306;local v307;while true do if ((v305==(0 -0)) or ((2750 -2028)>(2763 -(95 + 700)))) then v306=0;v307=nil;v305=2 -1;end if (((1694 -(690 + 263))<4566) and (v305==(1 -0))) then while true do if ((v306==0) or ((8891 -5901)>4907)) then v307=0 + 0;while true do if (((5439 -(1749 + 247))>350) and (v307==0)) then v176=v176 + ((6 -2) -(11 -8));v94[v304]=v174[v176];break;end end break;end end break;end end end break;end if ((v172==(296 -(75 + 221))) or (3123>4910)) then local v283=631 -(183 + 448);local v284;while true do if (((1137 -(647 + 490))==v283) or ((5737 -(1113 + 205))<(1107 + 1663))) then v284=0 + 0;while true do if ((v284==(1649 -(547 + 1102))) or ((1021 + 1038)<(6307 -4950))) then local v324=0 + 0;while true do if (((17 -7)<(409 + 45)) and (v324==0)) then v173=v96[6 -(6 -2)];v174,v175=v91(v94[v173](v94[v173 + ((4806 -3550) -(597 + 658))]));v324=1 + 0 + 0;end if ((v324==(2 -1)) or (2159>((10005 -(1631 + 345)) -5072))) then v284=1 + 0;break;end end end if ((1235<((12255 -(241 + 1359)) -6105)) and (v284==(1 + 0))) then v172=290 -(143 + 146);break;end end break;end end end if ((v172==1) or ((1569 -(55 + 55))<=(2095 -(621 + 373)))) then local v285=574 -(453 + (359 -238));local v286;while true do if ((v285==(1038 -(229 + 809))) or ((2426 -(130 + 1052))<(96 + 1121))) then v286=471 -(103 + 97 + 271);while true do if ((v286==(1060 -(736 + 323))) or ((1056 + 1 + 0)<((1753 -(222 + 553)) -230))) then v172=1533 -(158 + 1373);break;end if (((0 + 0)==v286) or ((3788 -2180)>=(3448 -(53 + 159)))) then v84=(v175 + v173) -(344 -(24 + 319));v176=0;v286=1 + 0;end end break;end end end end break;end if (((1092 -480)<=(1200 + 2374)) and (v171==(1 + 0))) then local v254=0 + 0;while true do if (((2475 + 137)>=258) and (v254==(1 + 0))) then v171=(403 + 804) -(8 + 1197);break;end if ((((1034 + 5957) -3270)<(4031 + 247)) and (v254==(0 + 0 + 0))) then v174=nil;v175=nil;v254=1 + 0;end end end if (((1805 + (4012 -2263))<3691) and (v171==(0 -0))) then local v255=0 -0;while true do if (((6622 -4582)<(7293 -2319)) and (v255==1)) then v171=2 -1;break;end if ((v255==0) or ((717 + 313)>=(8618 -5440))) then v172=119 -(5 + (440 -(309 + 17)));v173=nil;v255=1 + 0;end end end end break;end end end elseif ((v97==19) or ((297 + 60 + 4627)<(2832 + 695 + 144 + 781))) then v94[v96[2 -0]]=v36[v96[4 -1]];else v94[v96[2]]();end elseif ((((4282 -(614 + 746)) + 1412)==(10848 -6514)) and (v97<=(5 + 5 + 12))) then if (((4639 -3025)==(544 + 1070)) and (v97>(1 + 20))) then local v179=0;local v180;local v181;local v182;while true do if ((v179==1) or ((3742 -2225)>=(4388 -((1536 -(407 + 295)) + 842)))) then v182=nil;while true do if ((v180==(1547 -(1252 + 294))) or ((2407 + 2305)<=((2740 -1058) -734))) then v94[v181 + (1279 -((1734 -(130 + 1455)) + 1129))]=v182;v94[v181]=v182[v96[4]];break;end if ((v180==(1060 -(854 + 206))) or ((11835 -7348)<=(14488 -10813))) then local v259=0 + 0;while true do if (((31 + (3488 -1793))<=(3467 -(426 + 692))) and (v259==(149 -(5 + 143)))) then v180=1;break;end if ((v259==(0 -0)) or ((1784 + 411)<=((2986 -(59 + 305)) -(729 + 708)))) then v181=v96[1064 -((174 -66) + 954)];v182=v94[v96[735 -(92 + 640)]];v259=1;end end end end break;end if (((4947 -(62 + 55))==(5151 -(169 + 152))) and (v179==(0 + 0))) then v180=0 + 0;v181=nil;v179=2 -1;end end else v36[v96[3]]=v94[v96[(6 -1) -3]];end elseif ((v97==((175 -111) -41)) or ((1982 -(1074 + 724))>=(1739 -(8 + 126)))) then v94[v96[3 -(1 + 0)]][v96[3]]=v94[v96[1017 -(668 + 345)]];else v94[v96[2]]={};end elseif ((1393<=(1495 + 1295)) and (v97<=28)) then if (((1486 -(113 + 135))<4290) and (v97<=((1768 -(52 + 155)) -(505 + 1030)))) then if (((12710 -9066)>(1236 -(394 + 41))) and (v97==(55 -30))) then v94[v96[2]]=v34(v89[v96[(1852 -(154 + 1696)) + 1]],nil,v37);else v94[v96[1100 -(719 + 379)]]=v96[3]~=0;end elseif (((6081 -3858)<(7320 -(3791 -(820 + 285)))) and (v97==27)) then do return;end else local v190=(0 -0) + 0;local v191;while true do if ((v190==(0 -0)) or (2829<=(244 + 1050))) then v191=v96[679 -(222 + 455)];v94[v191](v94[v191 + (2 -1)]);break;end end end elseif (((6109 -(1497 + 3))>=2355) and (v97<=(177 -(10 + 137)))) then if ((v97==(90 -61)) or (1020>(13197 -9895))) then v94[v96[314 -(257 + 55)]]=v96[1248 -(622 + 623)];else v83=v96[3];end elseif (((116 + 269)<(5866 -1934)) and (v97<=31)) then local v195=0;local v196;local v197;local v198;local v199;local v200;while true do if (((6668 -2960)>(3714 -((2126 -(1987 + 4)) + 137))) and (v195==(1 + 1))) then for v235=1 + 0,v197 do v94[v198 + v235]=v199[v235];end v200=v199[1 -0];v195=1475 -(137 + 1335);end if ((2505>(4441 -1968)) and (v195==(8 -5))) then if (v200 or ((2946 -2350)>=(815 + 1363))) then local v242=1288 -(953 + 335);local v243;local v244;while true do if ((v242==(1061 -(420 + 640))) or ((4815 -(444 + 289))<=(2408 -1567))) then while true do if ((v243==(0 + 0)) or ((1021 + 1605)==(3698 -(1211 + 519)))) then v244=1723 -(147 + 1576);while true do if ((3541==3541) and (v244==0)) then v94[v198]=v200;v83=v96[1 + 2];break;end end break;end end break;end if ((v242==(472 -(231 + 241))) or ((2136 + 803)>(615 + 3043))) then v243=0;v244=nil;v242=1 -0;end end else v83=v83 + 1 + (932 -(623 + 309));end break;end if ((v195==(288 -(246 + 41))) or ((1926 -(780 + 757))>=3234)) then local v230=0 -(522 -(228 + 294));while true do if ((2987<=(5274 -(672 + 296))) and (v230==0)) then v198=v196 + (4 -2);v199={v94[v196](v94[v196 + (2 -1)],v94[v198])};v230=207 -(10 + 196);end if ((v230==(1 + 0)) or ((54 + 104)>=(2092 -1015))) then v195=2 + 0;break;end end end if (((3774 -(2900 -1733))>=(1182 + 442)) and (v195==0)) then local v231=0 -0;while true do if ((v231==(0 -0)) or (2515<((5849 -(125 + 898)) -3118))) then v196=v96[8 -6];v197=v96[9 -5];v231=1;end if (((3881 + 67)>(48 + 13)) and ((1 -0)==v231)) then v195=1;break;end end end end elseif ((4075==(2248 + 1827)) and (v97>(65 -33))) then local v218=1271 -(18 + 1253);local v219;local v220;while true do if (((0 -0)==v218) or ((6145 -(618 + 547))==(4771 -1899))) then v219=703 -(686 + 17);v220=nil;v218=1 + 0;end if ((v218==(1 -0)) or ((1257 -(72 + (131 -(27 + 69))))>(1434 -(135 + 31)))) then while true do if ((v219==(0 + 0)) or ((3150 -(233 + 1456))<(398 + 951))) then v220=v96[2 + 0];v94[v220](v13(v94,v220 + 1 + 0 + 0,v96[6 -(2 + 1)]));break;end end break;end end else for v232=v96[2],v96[2 + 1] do v94[v232]=nil;end end v83=v83 + 1 + 0;break;end if ((v101==(462 -(446 + 16))) or (4286<=((8843 -3345) -(51 + 1221)))) then local v114=1660 -(462 + 1198);local v115;while true do if ((3258==(5902 -2644)) and (v114==0)) then v115=382 -(189 + 193);while true do if ((527>(1062 -(798 + 163))) and (v115==(1 + 0))) then v101=1;break;end if (((1687 -1117)>=(1206 -(759 + (570 -420)))) and (v115==(0 -0))) then local v122=888 -(588 + 300);while true do if ((v122==(2 -1)) or (3722<(2209 + 805))) then v115=2 -1;break;end if ((v122==(0 -0)) or ((5542 -(867 + 425))<(2761 + 157))) then v96=v88[v83];v97=v96[1 + 0];v122=2 -1;end end end end break;end end end end break;end end break;end if (((20656 -(4365 + 12089))>(29 + 1071 + 392)) and (v99==(0 + 0))) then v100=1759 -(222 + (2205 -(465 + 203)));v101=nil;v99=1304 -(484 + 819);end end end end A,B=v32(v11(v87));if  not A[1] then local v102=0;local v103;while true do if (v102==0) then v103=v35[4][v83] or "?";error("Script error at ["   .. v103   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
